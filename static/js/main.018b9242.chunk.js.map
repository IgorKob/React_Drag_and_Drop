{"version":3,"sources":["components/data.js","components/get-initial-data.js","components/reorder.js","components/Item.js","components/Row.js","components/ItemList.js","components/Column.js","App.js","reportWebVitals.js","index.js"],"names":["startProducts0","JSON","parse","arr","i","j","push","id","name","groupId","groupName","startProducts","startGroups","initial","columns","obj","forEach","el","id0","img","items","filter","map","getGroups","columnOrder","reorderList","list","startIndex","endIndex","result","Array","from","splice","removed","getStyle","draggableStyle","virtualStyle","combined","backgroundColor","color","useStyles","makeStyles","theme","number","width","paddingRight","Item","provided","item","style","isDragging","index","classes","ListItem","button","divider","draggableProps","dragHandleProps","ref","innerRef","className","ListItemText","primary","secondary","Row","React","memo","props","data","draggableId","areEqual","ItemListApp","column","open","titleWrqpRef","listRef","useRef","useLayoutEffect","current","scrollTo","droppableId","mode","renderClone","snapshot","rubric","source","isDraggingOver","itemCount","isUsingPlaceholder","length","height","window","innerWidth","itemSize","outerRef","itemData","transition","background","left","top","opacity","margin","title__wrap","border","padding","listItemText","fontSize","textTransform","whiteSpace","overflow","textOverflow","paddingLeft","icon","minWidth","position","lengthGroup","borderRadius","textAlign","verticalAlign","lineHeight","small","spacing","ItemList_wrap","Column","columnId","openStart","useState","setOpen","handleClick","onClick","ListItemIcon","title","List","component","disablePadding","ItemList_wrap2","paddingTop","App","state","setState","setNewProductId","setNewGroupId","onDragEnd","destination","type","sourceColumn","destinationColumn","newSourceColumn","newDestinationColumn","newState","Number","droppableProps","Fragment","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.018b9242.chunk.js","sourcesContent":["const products = `[\r\n   {\r\n      \"id\": 1,\r\n      \"name\": \"картофель\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 2,\r\n      \"name\": \"помидоры\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 3,\r\n      \"name\": \"клубника\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 4,\r\n      \"name\": \"шоколад\",\r\n      \"groupId\": 8,\r\n      \"groupName\": \"кондитерские изделия\"\r\n   },\r\n   {\r\n      \"id\": 5,\r\n      \"name\": \"томаты\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 6,\r\n      \"name\": \"яблоко\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 7,\r\n      \"name\": \"пиво\",\r\n      \"groupId\": 14,\r\n      \"groupName\": \"алкогольные напитки\"\r\n   },\r\n   {\r\n      \"id\": 8,\r\n      \"name\": \"арахис\",\r\n      \"groupId\": 22,\r\n      \"groupName\": \"орехи и сухофрукты\"\r\n   },\r\n   {\r\n      \"id\": 9,\r\n      \"name\": \"туалетная бумага\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 10,\r\n      \"name\": \"ягоды\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 11,\r\n      \"name\": \"салат\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 12,\r\n      \"name\": \"гранола\",\r\n      \"groupId\": 6,\r\n      \"groupName\": \"бакалея\"\r\n   },\r\n   {\r\n      \"id\": 13,\r\n      \"name\": \"папки\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 14,\r\n      \"name\": \"ватные диски\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 15,\r\n      \"name\": \"кофе\",\r\n      \"groupId\": 13,\r\n      \"groupName\": \"чай и кофе\"\r\n   },\r\n   {\r\n      \"id\": 16,\r\n      \"name\": \"бананы\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 17,\r\n      \"name\": \"лаваш\",\r\n      \"groupId\": 7,\r\n      \"groupName\": \"выпечка\"\r\n   },\r\n   {\r\n      \"id\": 18,\r\n      \"name\": \"баклажаны\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 19,\r\n      \"name\": \"шампунь\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 20,\r\n      \"name\": \"вода минеральная\",\r\n      \"groupId\": 12,\r\n      \"groupName\": \"напитки\"\r\n   },\r\n   {\r\n      \"id\": 21,\r\n      \"name\": \"кукуруза\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 22,\r\n      \"name\": \"овсянка\",\r\n      \"groupId\": 6,\r\n      \"groupName\": \"бакалея\"\r\n   },\r\n   {\r\n      \"id\": 23,\r\n      \"name\": \"тампоны\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 24,\r\n      \"name\": \"растительное молоко\",\r\n      \"groupId\": 4,\r\n      \"groupName\": \"молочные продукты\"\r\n   },\r\n   {\r\n      \"id\": 25,\r\n      \"name\": \"объединить список\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"разное\"\r\n   },\r\n   {\r\n      \"id\": 26,\r\n      \"name\": \"жвачку\",\r\n      \"groupId\": 2,\r\n      \"groupName\": \"кулинария\"\r\n   },\r\n   {\r\n      \"id\": 27,\r\n      \"name\": \"огурец\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 28,\r\n      \"name\": \"перец\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 29,\r\n      \"name\": \"груша\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 30,\r\n      \"name\": \"итальянские травы\",\r\n      \"groupId\": 11,\r\n      \"groupName\": \"приправы\"\r\n   },\r\n   {\r\n      \"id\": 31,\r\n      \"name\": \"авокадо\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 32,\r\n      \"name\": \"персики\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 33,\r\n      \"name\": \"чай с травами\",\r\n      \"groupId\": 13,\r\n      \"groupName\": \"чай и кофе\"\r\n   },\r\n   {\r\n      \"id\": 34,\r\n      \"name\": \"клей\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 35,\r\n      \"name\": \"стиральный порошок\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 36,\r\n      \"name\": \"травяной чай\",\r\n      \"groupId\": 13,\r\n      \"groupName\": \"чай и кофе\"\r\n   },\r\n   {\r\n      \"id\": 37,\r\n      \"name\": \"средство для прочистки труб\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 38,\r\n      \"name\": \"картошка\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 39,\r\n      \"name\": \"петрушка\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 40,\r\n      \"name\": \"соль\",\r\n      \"groupId\": 11,\r\n      \"groupName\": \"приправы\"\r\n   },\r\n   {\r\n      \"id\": 41,\r\n      \"name\": \"морковь\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 42,\r\n      \"name\": \"гель для душа\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 43,\r\n      \"name\": \"горшок для гибискуса\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 44,\r\n      \"name\": \"очиститель труб\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 45,\r\n      \"name\": \"картофель\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 46,\r\n      \"name\": \"помидоры\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 47,\r\n      \"name\": \"клубника\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 48,\r\n      \"name\": \"шоколад\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"кондитерские изделия\"\r\n   },\r\n   {\r\n      \"id\": 49,\r\n      \"name\": \"томаты\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 50,\r\n      \"name\": \"яблоко\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 51,\r\n      \"name\": \"пиво\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"алкогольные напитки\"\r\n   },\r\n   {\r\n      \"id\": 52,\r\n      \"name\": \"арахис\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"орехи и сухофрукты\"\r\n   },\r\n   {\r\n      \"id\": 53,\r\n      \"name\": \"туалетная бумага\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 54,\r\n      \"name\": \"ягоды\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 55,\r\n      \"name\": \"салат\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 56,\r\n      \"name\": \"гранола\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"бакалея\"\r\n   },\r\n   {\r\n      \"id\": 57,\r\n      \"name\": \"папки\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   }\r\n]`;\r\n// export const startProducts = JSON.parse(products);\r\n\r\nconst startProducts0 = JSON.parse(products);\r\nconst arr = [...startProducts0];\r\n\r\nfor (let i = 1; i <= 22 ; i++) {\r\n   for (let j = 0; j <= 10000; j++) {\r\n     arr.push({id: `${i}_${j}`, name: `name_${i}_${j}`, groupId: i, groupName: `groupName_${i}_${j}`})\r\n   }   \r\n}\r\nexport const startProducts = arr;\r\n\r\n const groups = `[\r\n     {\"id\":1,\"name\":\"разное\",\"img\":\"other.png\"},\r\n     {\"id\":2,\"name\":\"кулинария\",\"img\":\"cookery.png\"},\r\n     {\"id\":3,\"name\":\"деликатесы\",\"img\":\"delicatessen.png\"},\r\n     {\"id\":4,\"name\":\"молочные продукты\",\"img\":\"milk.png\"},\r\n     {\"id\":5,\"name\":\"морские продукты\",\"img\":\"sea-foods.png\"},\r\n     {\"id\":6,\"name\":\"бакалея\",\"img\":\"cereal.png\"},\r\n     {\"id\":7,\"name\":\"выпечка\",\"img\":\"bakery.png\"},\r\n     {\"id\":8,\"name\":\"кондитерские изделия\",\"img\":\"sweets.png\"},\r\n     {\"id\":9,\"name\":\"консервированные продукты\",\"img\":\"canned-food.png\"},\r\n     {\"id\":10,\"name\":\"масла\",\"img\":\"oils.png\"},\r\n     {\"id\":11,\"name\":\"приправы\",\"img\":\"spices.png\"},\r\n     {\"id\":12,\"name\":\"напитки\",\"img\":\"drinks.png\"},\r\n     {\"id\":13,\"name\":\"чай и кофе\",\"img\":\"coffee-and-tea.png\"},\r\n     {\"id\":14,\"name\":\"алкогольные напитки\",\"img\":\"alcohol.png\"},\r\n     {\"id\":15,\"name\":\"табачные изделия\",\"img\":\"tobacco.png\"},\r\n     {\"id\":16,\"name\":\"сыры\",\"img\":\"cheese.png\"},\r\n     {\"id\":17,\"name\":\"домашнее хозяйство\",\"img\":\"household.png\"},\r\n     {\"id\":18,\"name\":\"аптека\",\"img\":\"pharmacy.png\"},\r\n     {\"id\":19,\"name\":\"замороженные продукты\",\"img\":\"frozen-food.png\"},\r\n     {\"id\":20,\"name\":\"домашние питомцы\",\"img\":\"pets.png\"},\r\n     {\"id\":21,\"name\":\"овощи и фрукты\",\"img\":\"vegetables&fruits.png\"},\r\n     {\"id\":22,\"name\":\"орехи и сухофрукты\",\"img\":\"nuts-and-dried-fruits.png\"}\r\n]`;\r\nexport const startGroups = JSON.parse(groups);","import {startProducts} from './data'\r\nimport {startGroups} from './data'\r\n\r\nconst getItems = (id) => {\r\n  const arr = startProducts.filter(el => el.groupId === id).map(el => {\r\n    if (el.groupId === id) {\r\n      return {id: `${el.id}`, name: el.name, groupId: el.groupId, groupName: el.groupName}\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst getGroups = () => {\r\n  const obj = {};\r\n  startGroups.forEach((el) => {\r\n    obj[`${el.name}`] = {id: `${el.name}`, id0: el.id, name: el.name, img: el.img, items: getItems(el.id)} \r\n  })\r\n  return obj;\r\n}\r\n\r\nconst initial = {\r\n  columns: getGroups(),                            \r\n  columnOrder: startGroups.map(el => el.name)      // [\"column-0\", \"column-1\"]\r\n};\r\n\r\nexport default function getInitialData() {\r\n  return initial;\r\n}","export function reorderList(list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n  \r\n    return result;\r\n  }\r\n  ","import React from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst getStyle = ({ draggableStyle, virtualStyle}) => {\r\n  const combined = {\r\n    ...virtualStyle,\r\n    ...draggableStyle\r\n  };  \r\n\r\n  const result = {\r\n    ...combined,\r\n    backgroundColor: '#fff',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  number: {\r\n    width: 'auto',\r\n    paddingRight: '15px',\r\n  },\r\n}));\r\n\r\nconst Item = ({ provided, item, style, isDragging, index = ''}) => {\r\n  const classes = useStyles();\r\n  return (\r\n      <ListItem button divider \r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        ref={provided.innerRef}\r\n        style={getStyle({\r\n          draggableStyle: provided.draggableProps.style,\r\n          virtualStyle: style,\r\n        })}\r\n      className={`item ${isDragging ? \"is-dragging\" : \"\"}`}\r\n      >\r\n        <p className={classes.number}>{index+1}</p>\r\n        <ListItemText primary={item.name} secondary={item.groupName}/>\r\n      </ListItem>\r\n  );\r\n}\r\nexport default Item;","import React from \"react\";\r\nimport { areEqual } from \"react-window\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\n\r\nconst Row = React.memo(function Row(props) {\r\n    const { data: items, index, style } = props;\r\n    const item = items[index];\r\n  \r\n    if (!item) {\r\n      return null;\r\n    }\r\n  \r\n    return (\r\n      <Draggable draggableId={item.id} index={index} key={item.id}>\r\n        {provided => <Item provided={provided} item={item} style={style} index={index} />}\r\n      </Draggable>\r\n    );\r\n  }, areEqual);\r\n  export default Row;","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\nimport Row from './Row';\r\n\r\nconst ItemListApp = React.memo(function ItemList({ column, index, open, titleWrqpRef }) {\r\n    const listRef = useRef();\r\n\r\n    useLayoutEffect(() => {\r\n      const list = listRef.current;\r\n      if (list) {\r\n        list.scrollTo(0);\r\n      }\r\n    }, [index]);\r\n\r\n    const getListStyle = (isDraggingOver) => {\r\n      \r\n      if (!open && isDraggingOver && titleWrqpRef.current) {\r\n        titleWrqpRef.current.style.backgroundColor = '#bbb';\r\n      }\r\n      if (!open && !isDraggingOver && titleWrqpRef.current) {\r\n        titleWrqpRef.current.style.backgroundColor = open ? '#f5f5f5' : '#ddd';\r\n      }\r\n\r\n      return {\r\n        transition: 'background .4s',\r\n        background: open ? isDraggingOver ? '#bbb' : '#f5f5f5' : isDraggingOver ? '#bbb' : 'transparent',  \r\n        width: !open && '1%',\r\n        left: !open && '40%',\r\n        top: !open && '-50px',\r\n        opacity: !open && '0',\r\n      }\r\n    };\r\n\r\n    const  listHeight = () => {\r\n      const sizeWindow = window.innerWidth;\r\n      if (sizeWindow > 900) {\r\n        return open ? 398 : 40;\r\n      }\r\n      return open ? 333 : 40;\r\n    }\r\n\r\n    return (\r\n      <Droppable\r\n        droppableId={column.id}\r\n        mode=\"virtual\"\r\n        renderClone={(provided, snapshot, rubric) => {\r\n          return (<Item\r\n            provided={provided}\r\n            isDragging={snapshot.isDragging}\r\n            item={column.items[rubric.source.index]}\r\n          />\r\n        )}}\r\n      >\r\n        {(provided, snapshot) => {\r\n          const itemCount = snapshot.isUsingPlaceholder\r\n            ? column.items.length + 1\r\n            : column.items.length;\r\n\r\n          return (\r\n            <FixedSizeList\r\n              height={listHeight()}\r\n              itemCount={itemCount}\r\n              itemSize={60}\r\n              outerRef={provided.innerRef}\r\n              itemData={column.items}\r\n              className=\"task-list\"\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              ref={listRef}\r\n            >\r\n              {Row}\r\n            </FixedSizeList>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    );\r\n  });\r\n  export default ItemListApp;","import React, { useState, useRef } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListMaterialUI from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Avatar from '@material-ui/core/Avatar';                           \r\nimport ItemListApp from './ItemList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  column: {\r\n    margin: '3px',\r\n  },\r\n  title__wrap: {\r\n    border: '1px solid #ddd',\r\n    padding: '15px',\r\n    transition: 'background .4s',\r\n    '&:hover': { opacity: '.9' },\r\n  },\r\n  listItemText: {              \r\n    fontSize:'.9rem',\r\n    textTransform: 'uppercase',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    paddingLeft: '8px',\r\n  },\r\n  icon: {\r\n    minWidth: '33px',\r\n    position: 'relative',\r\n  },\r\n  lengthGroup: {\r\n    position: 'absolute',\r\n    fontSize: '12px',\r\n    top: '-105%',\r\n    left: '55%',\r\n    backgroundColor: 'red',\r\n    color: '#fff',\r\n    borderRadius: '50%',\r\n    padding: '7% 13%',\r\n    textAlign: 'center',\r\n    verticalAlign: 'center',\r\n    lineHeight: '1em',\r\n  },\r\n  small: {          \r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  ItemList_wrap: {\r\n    backgroundColor: '#f5f5f5',\r\n    transition: 'background .4s',\r\n  },\r\n}));\r\n\r\nconst Column = React.memo(function Column({ column, index, columnId = null }) {\r\n    const classes = useStyles();\r\n    const openStart = columnId === 'разное' ? true : false;\r\n    const [open, setOpen] = useState(openStart);\r\n    const titleWrqpRef = useRef();\r\n  \r\n    const handleClick = () => {\r\n      setOpen(!open);\r\n    };\r\n\r\n    const getListStyle = (isDraggingOver) => {\r\n      return {\r\n        background: isDraggingOver ? '#a0a0ff' :  open ? '#f4f4f4' : '#ddd',   \r\n      }\r\n    };\r\n\r\n    return (\r\n      <Draggable draggableId={column.id} index={index}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n          <div\r\n            className={classes.column}\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n              <ListItem button \r\n                onClick={handleClick} \r\n                {...provided.dragHandleProps} \r\n                className={classes.title__wrap}\r\n                style={getListStyle(snapshot.isDragging)}\r\n                ref={titleWrqpRef}\r\n              >\r\n                <ListItemIcon className={classes.icon}>\r\n                  {column.items.length > 0 && <p className={classes.lengthGroup}>{column.items.length}</p>}\r\n                  <AddShoppingCartIcon />\r\n                  {/* <Avatar variant=\"rounded\" alt={column.name} src={column.img} className={classes.small} /> */}\r\n                </ListItemIcon>\r\n                <ListItemText primary={column.name} className={classes.title} classes={{primary:classes.listItemText}}/>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <div className={classes.ItemList_wrap} >\r\n                <ListMaterialUI component=\"div\" disablePadding className={classes.ItemList_wrap2} style={{height: !open && '0px', paddingTop: open && '3px'}}>\r\n                    <ItemListApp column={column} index={index} \r\n                      open={open}\r\n                      titleWrqpRef={titleWrqpRef}\r\n                    />\r\n                </ListMaterialUI>\r\n              </div>\r\n          </div>\r\n          )}}\r\n      </Draggable>\r\n    );\r\n  });\r\n  export default Column;","import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport getInitialData from \"./components/get-initial-data\";\nimport { reorderList } from \"./components/reorder\";\nimport './App.css';\nimport Column from './components/Column';\nimport axios from \"axios\";\n\nfunction App() {\n  const [state, setState] = useState(() => getInitialData());\n  const [newProductId, setNewProductId] = useState(null);\n  const [newGroupId, setNewGroupId] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState('');\n  \n  // const myArray = Object.values(state.columns).map(el => el.items).flat();\n  // const myArray2 = myArray.map(el => ({id: Number(el.id), name: el.name, groupId: el.groupId, groupName: el.groupName}));\n  // const myArray3 = myArray2.sort((a, b) => a.id - b.id);\n  // console.log(myArray3);\n\n  // useEffect(async () => {\n  //   if (newProductId && newGroupId) {\n  //     const url = 'https://helper-pepper.com/api/';\n  //     const id = 'asd';\n  //     setIsPending(true);\n\n  //     try {\n  //       const response = await axios.put(`${url}product/${newProductId}/group/${newGroupId}/${id}`, \n  //         {},           // {\"body\":data}, \n  //         {\n  //           headers: {\n  //            'Content-Type': 'application/json'\n  //         },\n  //       });\n\n  //       console.log(response);\n  //       setNewProductId(null);\n  //       setNewGroupId(null);\n\n  //     } catch (error) {\n  //       // console.log(error.response.data.error);\n  //       setError(error);\n  //       console.error(error);\n  //     }\n\n  //     setIsPending(false);\n  //   }\n  // }, [newProductId, newGroupId]);\n  \n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === \"column\") {\n      const columnOrder = reorderList(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder\n      });\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const items = reorderList(\n        column.items,\n        result.source.index,\n        // result.destination.index\n        0                            // kim order 0\n      );\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            items\n          }\n        }\n      };\n      setState(newState);\n      return;\n    }\n\n    // moving between lists\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const item = sourceColumn.items[result.source.index];\n\n    item.groupId = destinationColumn.id0;     // kim rename\n    item.groupName = destinationColumn.id;    // kim rename\n\n    // 1. remove item from source column\n    const newSourceColumn = {\n      ...sourceColumn,\n      items: [...sourceColumn.items]\n    };\n    newSourceColumn.items.splice(result.source.index, 1);\n\n    // 2. insert into destination column\n    const newDestinationColumn = {\n      ...destinationColumn,\n      items: [...destinationColumn.items]\n    };\n\n    // newDestinationColumn.items.splice(result.destination.index, 0, item);\n    newDestinationColumn.items.splice(0, 0, item);   // kim order 0\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn\n      }\n    };\n\n    setState(newState);\n    setNewProductId(Number(item.id));\n    setNewGroupId(newDestinationColumn.id0);\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"app\">\n        <div className=\"columns_wrap\">\n          <div>\n            <Droppable\n              droppableId=\"all-droppables1\"\n              type=\"column\"\n            >\n              {(provided, snapshot) => {\n                return (\n                <div\n                  className=\"columns\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {state.columnOrder.map((columnId, index) => (<React.Fragment key={columnId}>\n                    {columnId === 'разное' && (<Column\n                        columnId={columnId}\n                        column={state.columns[columnId]}\n                        index={index}\n                      />)}</React.Fragment>\n                    ))}\n                  {provided.placeholder}\n                </div>\n              )}}\n            </Droppable>\n          </div>\n        <Droppable\n          droppableId=\"all-droppables\"\n          type=\"column\"\n        >\n          {(provided, snapshot) => {\n            return (\n            <div\n              className=\"columns\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {state.columnOrder.map((columnId, index) => (<React.Fragment key={columnId}>\n                {columnId !== 'разное' && (<Column\n                  column={state.columns[columnId]}\n                  index={index}\n                />)}</React.Fragment>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}}\n        </Droppable>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}