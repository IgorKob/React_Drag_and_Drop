{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["finalProducts","id","name","groupId","groupName","thumb","App","useState","products","setProducts","className","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","src","alt","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAIMA,EAAgB,CACpB,CACEC,GAAI,IACJC,KAAM,yDACNC,QAAS,GACTC,UAAW,6EACXC,MAAO,kBAET,CACEJ,GAAI,IACJC,KAAM,mDACNC,QAAS,GACTC,UAAW,6EACXC,MAAO,kBAET,CACEJ,GAAI,IACJC,KAAM,mDACNC,QAAS,GACTC,UAAW,6EACXC,MAAO,kBAET,CACEJ,GAAI,IACJC,KAAM,6CACNC,QAAS,EACTC,UAAW,sHACXC,MAAO,kBAET,CACEJ,GAAI,IACJC,KAAM,uCACNC,QAAS,GACTC,UAAW,6EACXC,MAAO,mBAkDIC,EA9CH,WAAO,IAAD,EACgBC,mBAASP,GADzB,mBACTQ,EADS,KACCC,EADD,KAahB,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,gDACA,cAAC,IAAD,CAAiBC,UAdvB,SAAyBC,GACvB,GAAKA,EAAOC,YAAZ,CAEA,IAAMC,EAAQC,MAAMC,KAAKR,GAHM,EAIPM,EAAMG,OAAOL,EAAOM,OAAOC,MAAO,GAAnDC,EAJwB,oBAK/BN,EAAMG,OAAOL,EAAOC,YAAYM,MAAO,EAAGC,GAE1CX,EAAYK,KAOR,SACE,cAAC,IAAD,CAAWO,YAAY,WAAvB,SACG,SAACC,GAAD,OACC,6CAAIZ,UAAU,YAAeY,EAASC,gBAAtC,IAAsDC,IAAKF,EAASG,SAApE,UACGjB,EAASkB,KAAI,WAAoBP,GAAW,IAA7BlB,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAMG,EAAkB,EAAlBA,MACxB,OACE,cAAC,IAAD,CAAoBsB,YAAa1B,EAAIkB,MAAOA,EAA5C,SACG,SAACG,GAAD,OACC,yDAAIE,IAAKF,EAASG,UAAcH,EAASM,gBAAoBN,EAASO,iBAAtE,cACE,qBAAKnB,UAAU,iBAAf,SACE,qBAAKoB,IAAKzB,EAAO0B,IAAG,UAAK7B,EAAL,cAEtB,4BACIA,UAPMD,MAcnBqB,EAASU,2BCnEXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f93dd0a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\n\nconst finalProducts = [\n  {\n    id: '1',\n    name: 'картофель',\n    groupId: 21,\n    groupName: 'овощи и фрукты',\n    thumb: '/images/p1.jpg'\n  },\n  {\n    id: '2',\n    name: 'помидоры',\n    groupId: 21,\n    groupName: 'овощи и фрукты',\n    thumb: '/images/p1.jpg'\n  },\n  {\n    id: '3',\n    name: 'клубника',\n    groupId: 21,\n    groupName: 'овощи и фрукты',\n    thumb: '/images/p2.jpg'\n  },\n  {\n    id: '4',\n    name: 'шоколад',\n    groupId: 8,\n    groupName: 'кондитерские изделия',\n    thumb: '/images/p3.jpg'\n  },\n  {\n    id: '5',\n    name: 'томаты',\n    groupId: 21,\n    groupName: 'овощи и фрукты',\n    thumb: '/images/p4.jpg'\n  }\n]\n\nconst App = () => {\n  const [products, setProducts] = useState(finalProducts);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(products);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setProducts(items);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Final products</h1>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"products\">\n            {(provided) => (\n              <ul className=\"products\" {...provided.droppableProps} ref={provided.innerRef}>\n                {products.map(({id, name, thumb}, index) => {\n                  return (\n                    <Draggable key={id} draggableId={id} index={index}>\n                      {(provided) => (\n                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                          <div className=\"products-thumb\">\n                            <img src={thumb} alt={`${name} Thumb`} />\n                          </div>\n                          <p>\n                            { name }\n                          </p>\n                        </li>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </header>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}