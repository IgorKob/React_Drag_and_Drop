{"version":3,"sources":["components/data.js","components/get-initial-data.js","components/reorder.js","App.js","reportWebVitals.js","index.js"],"names":["startProducts","JSON","parse","startGroups","initial","columns","obj","forEach","el","id","name","id0","img","items","filter","groupId","map","groupName","getGroups","columnOrder","reorderList","list","startIndex","endIndex","result","Array","from","splice","removed","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","display","margin","spacing","column","title__wrap","border","title","textTransform","whiteSpace","overflow","textOverflow","icon","minWidth","ItemList_wrap","paddingTop","ItemList_wrap2","padding","getStyle","draggableStyle","virtualStyle","isDragging","combined","height","left","grid","marginBottom","Item","provided","item","style","ListItem","button","divider","draggableProps","dragHandleProps","ref","innerRef","className","ListItemText","primary","Row","React","memo","props","data","index","draggableId","areEqual","ItemList","listRef","useRef","useLayoutEffect","current","scrollTo","droppableId","mode","renderClone","snapshot","rubric","source","itemCount","isUsingPlaceholder","length","itemSize","outerRef","itemData","Column","classes","useState","open","setOpen","handleClick","onClick","ListItemIcon","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","App","state","setState","onDragEnd","destination","type","sourceColumn","destinationColumn","newSourceColumn","newDestinationColumn","newState","onDragStart","window","navigator","vibrate","droppableProps","columnId","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1f6ac72.chunk.js","sourcesContent":["const products = `[\r\n    {\r\n       \"id\": 1,\r\n       \"name\": \"картофель\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 2,\r\n       \"name\": \"помидоры\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 3,\r\n       \"name\": \"клубника\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 4,\r\n       \"name\": \"шоколад\",\r\n       \"groupId\": 8,\r\n       \"groupName\": \"кондитерские изделия\"\r\n    },\r\n    {\r\n       \"id\": 5,\r\n       \"name\": \"томаты\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 6,\r\n       \"name\": \"яблоко\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 7,\r\n       \"name\": \"пиво\",\r\n       \"groupId\": 14,\r\n       \"groupName\": \"алкогольные напитки\"\r\n    },\r\n    {\r\n       \"id\": 8,\r\n       \"name\": \"арахис\",\r\n       \"groupId\": 22,\r\n       \"groupName\": \"орехи и сухофрукты\"\r\n    },\r\n    {\r\n       \"id\": 9,\r\n       \"name\": \"туалетная бумага\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 10,\r\n       \"name\": \"ягоды\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 11,\r\n       \"name\": \"салат\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 12,\r\n       \"name\": \"гранола\",\r\n       \"groupId\": 6,\r\n       \"groupName\": \"бакалея\"\r\n    },\r\n    {\r\n       \"id\": 13,\r\n       \"name\": \"папки\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 14,\r\n       \"name\": \"ватные диски\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 15,\r\n       \"name\": \"кофе\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 16,\r\n       \"name\": \"бананы\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 17,\r\n       \"name\": \"лаваш\",\r\n       \"groupId\": 7,\r\n       \"groupName\": \"выпечка\"\r\n    },\r\n    {\r\n       \"id\": 18,\r\n       \"name\": \"баклажаны\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 19,\r\n       \"name\": \"шампунь\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 20,\r\n       \"name\": \"вода минеральная\",\r\n       \"groupId\": 12,\r\n       \"groupName\": \"напитки\"\r\n    },\r\n    {\r\n       \"id\": 21,\r\n       \"name\": \"кукуруза\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 22,\r\n       \"name\": \"овсянка\",\r\n       \"groupId\": 6,\r\n       \"groupName\": \"бакалея\"\r\n    },\r\n    {\r\n       \"id\": 23,\r\n       \"name\": \"тампоны\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 24,\r\n       \"name\": \"растительное молоко\",\r\n       \"groupId\": 4,\r\n       \"groupName\": \"молочные продукты\"\r\n    },\r\n    {\r\n       \"id\": 25,\r\n       \"name\": \"объединить список\",\r\n       \"groupId\": 1,\r\n       \"groupName\": \"разное\"\r\n    },\r\n    {\r\n       \"id\": 26,\r\n       \"name\": \"жвачку\",\r\n       \"groupId\": 2,\r\n       \"groupName\": \"кулинария\"\r\n    },\r\n    {\r\n       \"id\": 27,\r\n       \"name\": \"огурец\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 28,\r\n       \"name\": \"перец\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 29,\r\n       \"name\": \"груша\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 30,\r\n       \"name\": \"итальянские травы\",\r\n       \"groupId\": 11,\r\n       \"groupName\": \"приправы\"\r\n    },\r\n    {\r\n       \"id\": 31,\r\n       \"name\": \"авокадо\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 32,\r\n       \"name\": \"персики\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 33,\r\n       \"name\": \"чай с травами\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 34,\r\n       \"name\": \"клей\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 35,\r\n       \"name\": \"стиральный порошок\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 36,\r\n       \"name\": \"травяной чай\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 37,\r\n       \"name\": \"средство для прочистки труб\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 38,\r\n       \"name\": \"картошка\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 39,\r\n       \"name\": \"петрушка\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 40,\r\n       \"name\": \"соль\",\r\n       \"groupId\": 11,\r\n       \"groupName\": \"приправы\"\r\n    },\r\n    {\r\n       \"id\": 41,\r\n       \"name\": \"морковь\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 42,\r\n       \"name\": \"гель для душа\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 43,\r\n       \"name\": \"горшок для гибискуса\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 44,\r\n       \"name\": \"очиститель труб\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    }\r\n ]`;\r\n export const startProducts = JSON.parse(products);\r\n\r\n const groups = `[\r\n     {\"id\":1,\"name\":\"разное\",\"img\":\"other.png\"},\r\n     {\"id\":2,\"name\":\"кулинария\",\"img\":\"cookery.png\"},\r\n     {\"id\":3,\"name\":\"деликатесы\",\"img\":\"delicatessen.png\"},\r\n     {\"id\":4,\"name\":\"молочные продукты\",\"img\":\"milk.png\"},\r\n     {\"id\":5,\"name\":\"морские продукты\",\"img\":\"sea-foods.png\"},\r\n     {\"id\":6,\"name\":\"бакалея\",\"img\":\"cereal.png\"},\r\n     {\"id\":7,\"name\":\"выпечка\",\"img\":\"bakery.png\"},\r\n     {\"id\":8,\"name\":\"кондитерские изделия\",\"img\":\"sweets.png\"},\r\n     {\"id\":9,\"name\":\"консервированные продукты\",\"img\":\"canned-food.png\"},\r\n     {\"id\":10,\"name\":\"масла\",\"img\":\"oils.png\"},\r\n     {\"id\":11,\"name\":\"приправы\",\"img\":\"spices.png\"},\r\n     {\"id\":12,\"name\":\"напитки\",\"img\":\"drinks.png\"},\r\n     {\"id\":13,\"name\":\"чай и кофе\",\"img\":\"coffee-and-tea.png\"},\r\n     {\"id\":14,\"name\":\"алкогольные напитки\",\"img\":\"alcohol.png\"},\r\n     {\"id\":15,\"name\":\"табачные изделия\",\"img\":\"tobacco.png\"},\r\n     {\"id\":16,\"name\":\"сыры\",\"img\":\"cheese.png\"},\r\n     {\"id\":17,\"name\":\"домашнее хозяйство\",\"img\":\"household.png\"},\r\n     {\"id\":18,\"name\":\"аптека\",\"img\":\"pharmacy.png\"},\r\n     {\"id\":19,\"name\":\"замороженные продукты\",\"img\":\"frozen-food.png\"},\r\n     {\"id\":20,\"name\":\"домашние питомцы\",\"img\":\"pets.png\"},\r\n     {\"id\":21,\"name\":\"овощи и фрукты\",\"img\":\"vegetables&fruits.png\"},\r\n     {\"id\":22,\"name\":\"орехи и сухофрукты\",\"img\":\"nuts-and-dried-fruits.png\"}\r\n]`;\r\nexport const startGroups = JSON.parse(groups);","import {startProducts} from './data'\r\nimport {startGroups} from './data'\r\n\r\nconst getItems = (id) => {\r\n  const arr = startProducts.filter(el => el.groupId === id).map(el => {\r\n    if (el.groupId === id) {\r\n      return {id: `${el.id}`, name: el.name, groupId: el.groupId, groupName: el.groupName}\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst getGroups = () => {\r\n  const obj = {};\r\n  startGroups.forEach((el) => {\r\n    obj[`${el.name}`] = {id: `${el.name}`, id0: el.id, name: el.name, img: el.img, items: getItems(el.id)} \r\n  })\r\n  return obj;\r\n}\r\n\r\nconst initial = {\r\n  columns: getGroups(),                            \r\n  columnOrder: startGroups.map(el => el.name)      // [\"column-0\", \"column-1\"]\r\n};\r\n\r\nexport default function getInitialData() {\r\n  return initial;\r\n}","export function reorderList(list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n  \r\n    return result;\r\n  }\r\n  ","import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport { FixedSizeList, areEqual } from \"react-window\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport getInitialData from \"./components/get-initial-data\";\nimport { reorderList } from \"./components/reorder\";\nimport './App.css';\nimport img from './images/p1.jpg'\nimport { ListManager } from \"react-beautiful-dnd-grid\";\nimport { FixedSizeList as List } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListMaterialUI from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Avatar from '@material-ui/core/Avatar';            // img\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  column: {\n    margin: '1px',\n  },\n  title__wrap: {\n    border: '1px solid #ccc',\n    // textOverflow: 'ellipsis',\n    // visibility: 'hidden',\n  },\n  title: {\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    // paddingLeft: theme.spacing(4),\n  },\n  icon: {\n    minWidth: '33px',\n  },\n  // small: {                     // img avatar\n  //   width: theme.spacing(3),\n  //   height: theme.spacing(3),\n  // },\n  ItemList_wrap: {\n    backgroundColor: '#ccc',\n    paddingTop: '3px',          // dont work only (+ItemList_wrap2)\n  },\n  ItemList_wrap2: {      \n    // paddingTop: '3px',\n    padding: '3px',\n  },\n}));\n\nfunction getStyle({ draggableStyle, virtualStyle, isDragging }) {\n  // If you don't want any spacing between your items\n  // then you could just return this.\n  // I do a little bit of magic to have some nice visual space\n  // between the row items\n  const combined = {\n    ...virtualStyle,\n    ...draggableStyle\n  };\n\n  // Being lazy: this is defined in our css file\n  const grid = 8;\n\n  // when dragging we want to use the draggable style for placement, otherwise use the virtual style\n  const result = {\n    ...combined,\n    height: isDragging ? combined.height : combined.height - grid,\n    left: isDragging ? combined.left : combined.left + grid,\n    width: isDragging\n      ? draggableStyle.width\n      : `calc(${combined.width} - ${grid * 2}px)`,\n    marginBottom: grid,\n    backgroundColor: '#aaa',\n  };\n\n  return result;\n}\n\nfunction Item({ provided, item, style, isDragging }) {\n  return (\n    // <div\n    //   {...provided.draggableProps}\n    //   {...provided.dragHandleProps}\n    //   ref={provided.innerRef}\n    //   style={getStyle({\n    //     draggableStyle: provided.draggableProps.style,\n    //     virtualStyle: style,\n    //     isDragging\n    //   })}\n    //   className={`item ${isDragging ? \"is-dragging\" : \"\"}`}\n    // >\n    //   {item.name}\n    // </div>\n      <ListItem button divider \n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        ref={provided.innerRef}\n        style={getStyle({\n          draggableStyle: provided.draggableProps.style,\n          virtualStyle: style,\n          isDragging\n        })}\n      className={`item ${isDragging ? \"is-dragging\" : \"\"}`}\n      >\n        <ListItemText primary={item.name} />\n      </ListItem>\n  );\n}\n\n// Recommended react-window performance optimisation: memoize the row render function\n// Things are still pretty fast without this, but I am a sucker for making things faster\nconst Row = React.memo(function Row(props) {\n  const { data: items, index, style } = props;\n  const item = items[index];\n\n  // We are rendering an extra item for the placeholder\n  if (!item) {\n    return null;\n  }\n\n  return (\n    <Draggable draggableId={item.id} index={index} key={item.id}>\n      {provided => <Item provided={provided} item={item} style={style} />}\n    </Draggable>\n  );\n}, areEqual);\n\nconst ItemList = React.memo(function ItemList({ column, index }) {\n  // There is an issue I have noticed with react-window that when reordered\n  // react-window sets the scroll back to 0 but does not update the UI\n  // I should raise an issue for this.\n  // As a work around I am resetting the scroll to 0\n  // on any list that changes it's index\n  const listRef = useRef();\n  useLayoutEffect(() => {\n    const list = listRef.current;\n    if (list) {\n      list.scrollTo(0);\n    }\n  }, [index]);\n\n  return (\n    <Droppable\n      droppableId={column.id}\n      mode=\"virtual\"\n      renderClone={(provided, snapshot, rubric) => (\n        <Item\n          provided={provided}\n          isDragging={snapshot.isDragging}\n          item={column.items[rubric.source.index]}\n        />\n      )}\n    >\n      {(provided, snapshot) => {\n        // Add an extra item to our list to make space for a dragging item\n        // Usually the DroppableProvided.placeholder does this, but that won't\n        // work in a virtual list\n        const itemCount = snapshot.isUsingPlaceholder\n          ? column.items.length + 1\n          : column.items.length;\n\n        return (\n          <FixedSizeList\n            height={500}\n            itemCount={itemCount}\n            itemSize={60}\n            // width={300}\n            outerRef={provided.innerRef}\n            itemData={column.items}\n            className=\"task-list\"\n            ref={listRef}\n          >\n            {Row}\n          </FixedSizeList>\n        );\n      }}\n    </Droppable>\n  );\n});\n\nconst Column = React.memo(function Column({ column, index }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        // <div\n        //   className=\"column\"\n        //   {...provided.draggableProps}\n        //   ref={provided.innerRef}\n        // >\n        //   <h3 className=\"column-title\" {...provided.dragHandleProps}>\n        //     {/* <img src={column.img} alt={column.name}/> */}\n        //     <img src={img} alt={column.name}/>\n        //     {column.name}\n        //   </h3>\n        //   <ItemList column={column} index={index} />\n        // </div>\n\n        <div\n          className={classes.column}\n          {...provided.draggableProps}\n          ref={provided.innerRef}\n        >\n            <ListItem button onClick={handleClick} {...provided.dragHandleProps} className={classes.title__wrap}>\n              <ListItemIcon className={classes.icon}>\n                <AddShoppingCartIcon />\n                {/* <Avatar variant=\"rounded\" alt={column.name} src={column.img} className={classes.small} /> */}\n              </ListItemIcon>\n              <ListItemText primary={column.name} className={classes.title} />\n              {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.ItemList_wrap}>\n              <ListMaterialUI component=\"div\" disablePadding className={classes.ItemList_wrap2}>\n                {/* <ListItem button className={classes.nested}> */}\n                  {/* <ListItemIcon>\n                    <StarBorder />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Starred\" /> */}\n                  <ItemList column={column} index={index} />\n                {/* </ListItem> */}\n              </ListMaterialUI>\n            </Collapse>\n        </div>\n      )}\n    </Draggable>\n  );\n});\n\nfunction App() {\n  const [state, setState] = useState(() => getInitialData());\n  // debugger\n  // const myArray = Object.values(state.columns).map(el => el.items).flat();\n  // const myArray2 = myArray.map(el => ({id: Number(el.id), name: el.name, groupId: el.groupId, groupName: el.groupName}));\n  // const myArray3 = myArray2.sort((a, b) => a.id - b.id);\n  // console.log(myArray3);\n\n\n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === \"column\") {\n      // if the list is scrolled it looks like there is some strangeness going on\n      // with react-window. It looks to be scrolling back to scroll: 0\n      // I should log an issue with the project\n      const columnOrder = reorderList(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder\n      });\n      return;\n    }\n\n    // reordering in same list\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const items = reorderList(\n        column.items,\n        result.source.index,\n        // result.destination.index\n        0                          // kim order 0\n      );\n\n      // updating column entry\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            items\n          }\n        }\n      };\n      setState(newState);\n      return;\n    }\n\n    // moving between lists\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const item = sourceColumn.items[result.source.index];\n\n    // kim\n    item.groupId = destinationColumn.id0;     // kim rename\n    item.groupName = destinationColumn.id;    // kim rename\n\n    // 1. remove item from source column\n    const newSourceColumn = {\n      ...sourceColumn,\n      items: [...sourceColumn.items]\n    };\n    newSourceColumn.items.splice(result.source.index, 1);\n\n    // 2. insert into destination column\n    const newDestinationColumn = {\n      ...destinationColumn,\n      items: [...destinationColumn.items]\n    };\n    // in line modification of items\n    // newDestinationColumn.items.splice(result.destination.index, 0, item);\n    newDestinationColumn.items.splice(0, 0, item);   // kim order 0\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn\n      }\n    };\n\n    setState(newState);\n  }\n\n  // kim2 vibro\n  const onDragStart = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(100);\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart} >\n      <div className=\"app\">\n        <Droppable\n          droppableId=\"all-droppables\"\n          // direction=\"horizontal\"\n          // direction=\"vertical\"\n\n          type=\"column\"\n        >\n          {provided => (\n            <div\n              className=\"columns\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {state.columnOrder.map((columnId, index) => (\n                <Column\n                  key={columnId}\n                  column={state.columns[columnId]}\n                  index={index}\n                />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </DragDropContext>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}