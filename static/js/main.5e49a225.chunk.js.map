{"version":3,"sources":["components/reorder.js","components/Item.js","components/Row.js","components/ItemList.js","components/Column.js","components/Progress.js","components/data.js","components/get-initial-data.js","App.js","reportWebVitals.js","index.js"],"names":["reorderList","list","startIndex","endIndex","result","Array","from","splice","removed","getStyle","draggableStyle","virtualStyle","combined","backgroundColor","color","useStyles","makeStyles","theme","number","width","paddingRight","Item","provided","item","style","isDragging","index","classes","ListItem","button","divider","draggableProps","dragHandleProps","ref","innerRef","className","ListItemText","primary","name","secondary","groupName","Row","React","memo","props","items","data","draggableId","id","areEqual","ItemListApp","column","open","titleWrqpRef","listRef","useRef","useLayoutEffect","current","scrollTo","listHeight","sizeWindow","window","innerWidth","sizeHeight","innerHeight","document","documentElement","clientHeight","screen","availHeight","droppableId","mode","renderClone","snapshot","rubric","source","isDraggingOver","itemCount","isUsingPlaceholder","length","height","itemSize","outerRef","itemData","transition","background","left","top","opacity","margin","title__wrap","border","padding","listItemText","fontSize","textTransform","whiteSpace","overflow","textOverflow","paddingLeft","icon","minWidth","position","lengthGroup","borderRadius","textAlign","verticalAlign","lineHeight","small","spacing","ItemList_wrap","Column","columnId","openStart","useState","setOpen","handleClick","onClick","ListItemIcon","title","List","component","disablePadding","ItemList_wrap2","paddingTop","root","display","justifyContent","alignItems","marginLeft","Progress","CircularProgress","startProducts","JSON","parse","startGroups","initial","columns","obj","forEach","el","id0","img","filter","groupId","map","getGroups","columnOrder","App","state","setState","products","setProducts","groups","setGroups","newProductId","setNewProductId","newGroupId","setNewGroupId","isPending","setIsPending","enqueueSnackbar","useSnackbar","URLSearchParams","location","search","get","apiKey","instance","axios","create","baseURL","withCredentials","headers","useEffect","a","responseProducts","status","responseGroups","variant","getItems","put","onDragEnd","destination","type","sourceColumn","destinationColumn","newSourceColumn","newDestinationColumn","newState","Number","droppableProps","Fragment","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","max","ReactDOM","render","maxSnack","dense","StrictMode","path","getElementById"],"mappings":"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","file":"static/js/main.5e49a225.chunk.js","sourcesContent":["export function reorderList(list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n  \r\n    return result;\r\n  }\r\n  ","import React from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst getStyle = ({ draggableStyle, virtualStyle}) => {\r\n  const combined = {\r\n    ...virtualStyle,\r\n    ...draggableStyle\r\n  };  \r\n\r\n  const result = {\r\n    ...combined,\r\n    backgroundColor: '#fff',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n  };\r\n\r\n  return result;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  number: {\r\n    width: 'auto',\r\n    paddingRight: '15px',\r\n  },\r\n}));\r\n\r\nconst Item = ({ provided, item, style, isDragging, index = ''}) => {\r\n  const classes = useStyles();\r\n  return (\r\n      <ListItem button divider \r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        ref={provided.innerRef}\r\n        style={getStyle({\r\n          draggableStyle: provided.draggableProps.style,\r\n          virtualStyle: style,\r\n        })}\r\n      className={`item ${isDragging ? \"is-dragging\" : \"\"}`}\r\n      >\r\n        <p className={classes.number}>{index+1}</p>\r\n        <ListItemText primary={item.name} secondary={item.groupName}/>\r\n      </ListItem>\r\n  );\r\n}\r\nexport default Item;","import React from \"react\";\r\nimport { areEqual } from \"react-window\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\n\r\nconst Row = React.memo(function Row(props) {\r\n    const { data: items, index, style } = props;\r\n    const item = items[index];\r\n  \r\n    if (!item) {\r\n      return null;\r\n    }\r\n  \r\n    return (\r\n      <Draggable draggableId={item.id} index={index} key={item.id}>\r\n        {provided => <Item provided={provided} item={item} style={style} index={index} />}\r\n      </Draggable>\r\n    );\r\n  }, areEqual);\r\n  export default Row;","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\nimport Row from './Row';\r\n\r\nconst ItemListApp = React.memo(function ItemList({ column, index, open, titleWrqpRef }) {\r\n    const listRef = useRef();\r\n\r\n    useLayoutEffect(() => {\r\n      const list = listRef.current;\r\n      if (list) {\r\n        list.scrollTo(0);\r\n      }\r\n    }, [index]);\r\n\r\n    const getListStyle = (isDraggingOver) => {\r\n      \r\n      if (!open && isDraggingOver && titleWrqpRef.current) {\r\n        titleWrqpRef.current.style.backgroundColor = '#bbb';\r\n      }\r\n      if (!open && !isDraggingOver && titleWrqpRef.current) {\r\n        titleWrqpRef.current.style.backgroundColor = open ? '#f5f5f5' : '#ddd';\r\n      }\r\n\r\n      return {\r\n        transition: 'background .4s',\r\n        background: open ? isDraggingOver ? '#bbb' : '#f5f5f5' : isDraggingOver ? '#bbb' : 'transparent',  \r\n        width: !open && '1%',\r\n        left: !open && '40%',\r\n        top: !open && '-50px',\r\n        opacity: !open && '0',\r\n      }\r\n    };\r\n\r\n    const  listHeight = () => {\r\n      const sizeWindow = window.innerWidth;\r\n      const sizeHeight = window.innerHeight;\r\n      const intFrameHeight = document.documentElement.clientHeight;\r\n      const intFrameHeight2 = window.screen.availHeight;\r\n      // debugger\r\n      // if (sizeWindow > 900) {\r\n      //   return open ? 398 : 40;\r\n      // }\r\n      // return open ? 333 : 40;\r\n      if (sizeWindow > 900) {\r\n        return open ? sizeHeight-75 : 40;\r\n      }\r\n      return open ? 333 : 40;\r\n    }\r\n\r\n    return (\r\n      <Droppable\r\n        droppableId={column.id}\r\n        mode=\"virtual\"\r\n        renderClone={(provided, snapshot, rubric) => {\r\n          return (<Item\r\n            provided={provided}\r\n            isDragging={snapshot.isDragging}\r\n            item={column.items[rubric.source.index]}\r\n          />\r\n        )}}\r\n      >\r\n        {(provided, snapshot) => {\r\n          const itemCount = snapshot.isUsingPlaceholder\r\n            ? column.items.length + 1\r\n            : column.items.length;\r\n// debugger\r\n          return (\r\n            <FixedSizeList\r\n              height={listHeight()}\r\n              itemCount={itemCount}\r\n              itemSize={60}\r\n              outerRef={provided.innerRef}\r\n              itemData={column.items}\r\n              className=\"task-list\"\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              ref={listRef}\r\n            >\r\n              {Row}\r\n            </FixedSizeList>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    );\r\n  });\r\n  export default ItemListApp;","import React, { useState, useRef } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListMaterialUI from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Avatar from '@material-ui/core/Avatar';                           \r\nimport ItemListApp from './ItemList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  column: {\r\n    margin: '3px',\r\n  },\r\n  title__wrap: {\r\n    border: '1px solid #ddd',\r\n    padding: '15px',\r\n    transition: 'background .4s',\r\n    '&:hover': { opacity: '.9' },\r\n  },\r\n  listItemText: {              \r\n    fontSize:'.9rem',\r\n    textTransform: 'uppercase',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    paddingLeft: '8px',\r\n  },\r\n  icon: {\r\n    minWidth: '33px',\r\n    position: 'relative',\r\n  },\r\n  lengthGroup: {\r\n    position: 'absolute',\r\n    fontSize: '12px',\r\n    top: '-105%',\r\n    left: '55%',\r\n    backgroundColor: 'red',\r\n    color: '#fff',\r\n    borderRadius: '50%',\r\n    padding: '7% 13%',\r\n    textAlign: 'center',\r\n    verticalAlign: 'center',\r\n    lineHeight: '1em',\r\n  },\r\n  small: {          \r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  ItemList_wrap: {\r\n    backgroundColor: '#f5f5f5',\r\n    transition: 'background .4s',\r\n  },\r\n}));\r\n\r\nconst Column = React.memo(function Column({ column, index, columnId = null }) {\r\n    const classes = useStyles();\r\n    const openStart = columnId === 'разное' ? true : false;\r\n    const [open, setOpen] = useState(openStart);\r\n    const titleWrqpRef = useRef();\r\n  \r\n    const handleClick = () => {\r\n      setOpen(!open);\r\n    };\r\n\r\n    const getListStyle = (isDraggingOver) => {\r\n      return {\r\n        background: isDraggingOver ? '#a0a0ff' :  open ? '#f4f4f4' : '#ddd',   \r\n      }\r\n    };\r\n\r\n    return (\r\n      <Draggable draggableId={column.id} index={index}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n          <div\r\n            className={classes.column}\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n              <ListItem button \r\n                onClick={handleClick} \r\n                {...provided.dragHandleProps} \r\n                className={classes.title__wrap}\r\n                style={getListStyle(snapshot.isDragging)}\r\n                ref={titleWrqpRef}\r\n              >\r\n                <ListItemIcon className={classes.icon}>\r\n                  {column.items.length > 0 && <p className={classes.lengthGroup}>{column.items.length}</p>}\r\n                  <AddShoppingCartIcon />\r\n                  {/* <Avatar variant=\"rounded\" alt={column.name} src={column.img} className={classes.small} /> */}\r\n                </ListItemIcon>\r\n                <ListItemText primary={column.name} className={classes.title} classes={{primary:classes.listItemText}}/>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <div className={classes.ItemList_wrap} >\r\n                <ListMaterialUI component=\"div\" disablePadding className={classes.ItemList_wrap2} style={{height: !open && '0px', paddingTop: open && '3px'}}>\r\n                    <ItemListApp column={column} index={index} \r\n                      open={open}\r\n                      titleWrqpRef={titleWrqpRef}\r\n                    />\r\n                </ListMaterialUI>\r\n              </div>\r\n          </div>\r\n          )}}\r\n      </Draggable>\r\n    );\r\n  });\r\n  export default Column;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100vh',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Progress() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","const products = `[\r\n    {\r\n       \"id\": 1,\r\n       \"name\": \"картофель\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 2,\r\n       \"name\": \"помидоры\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 3,\r\n       \"name\": \"клубника\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 4,\r\n       \"name\": \"шоколад\",\r\n       \"groupId\": 8,\r\n       \"groupName\": \"кондитерские изделия\"\r\n    },\r\n    {\r\n       \"id\": 5,\r\n       \"name\": \"томаты\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 6,\r\n       \"name\": \"яблоко\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 7,\r\n       \"name\": \"пиво\",\r\n       \"groupId\": 14,\r\n       \"groupName\": \"алкогольные напитки\"\r\n    },\r\n    {\r\n       \"id\": 8,\r\n       \"name\": \"арахис\",\r\n       \"groupId\": 22,\r\n       \"groupName\": \"орехи и сухофрукты\"\r\n    },\r\n    {\r\n       \"id\": 9,\r\n       \"name\": \"туалетная бумага\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 10,\r\n       \"name\": \"ягоды\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 11,\r\n       \"name\": \"салат\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 12,\r\n       \"name\": \"гранола\",\r\n       \"groupId\": 6,\r\n       \"groupName\": \"бакалея\"\r\n    },\r\n    {\r\n       \"id\": 13,\r\n       \"name\": \"папки\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 14,\r\n       \"name\": \"ватные диски\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 15,\r\n       \"name\": \"кофе\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 16,\r\n       \"name\": \"бананы\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 17,\r\n       \"name\": \"лаваш\",\r\n       \"groupId\": 7,\r\n       \"groupName\": \"выпечка\"\r\n    },\r\n    {\r\n       \"id\": 18,\r\n       \"name\": \"баклажаны\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 19,\r\n       \"name\": \"шампунь\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 20,\r\n       \"name\": \"вода минеральная\",\r\n       \"groupId\": 12,\r\n       \"groupName\": \"напитки\"\r\n    },\r\n    {\r\n       \"id\": 21,\r\n       \"name\": \"кукуруза\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 22,\r\n       \"name\": \"овсянка\",\r\n       \"groupId\": 6,\r\n       \"groupName\": \"бакалея\"\r\n    },\r\n    {\r\n       \"id\": 23,\r\n       \"name\": \"тампоны\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 24,\r\n       \"name\": \"растительное молоко\",\r\n       \"groupId\": 4,\r\n       \"groupName\": \"молочные продукты\"\r\n    },\r\n    {\r\n       \"id\": 25,\r\n       \"name\": \"объединить список\",\r\n       \"groupId\": 1,\r\n       \"groupName\": \"разное\"\r\n    },\r\n    {\r\n       \"id\": 26,\r\n       \"name\": \"жвачку\",\r\n       \"groupId\": 2,\r\n       \"groupName\": \"кулинария\"\r\n    },\r\n    {\r\n       \"id\": 27,\r\n       \"name\": \"огурец\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 28,\r\n       \"name\": \"перец\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 29,\r\n       \"name\": \"груша\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 30,\r\n       \"name\": \"итальянские травы\",\r\n       \"groupId\": 11,\r\n       \"groupName\": \"приправы\"\r\n    },\r\n    {\r\n       \"id\": 31,\r\n       \"name\": \"авокадо\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 32,\r\n       \"name\": \"персики\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 33,\r\n       \"name\": \"чай с травами\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 34,\r\n       \"name\": \"клей\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 35,\r\n       \"name\": \"стиральный порошок\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 36,\r\n       \"name\": \"травяной чай\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 37,\r\n       \"name\": \"средство для прочистки труб\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 38,\r\n       \"name\": \"картошка\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 39,\r\n       \"name\": \"петрушка\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 40,\r\n       \"name\": \"соль\",\r\n       \"groupId\": 11,\r\n       \"groupName\": \"приправы\"\r\n    },\r\n    {\r\n       \"id\": 41,\r\n       \"name\": \"морковь\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 42,\r\n       \"name\": \"гель для душа\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 43,\r\n       \"name\": \"горшок для гибискуса\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 44,\r\n       \"name\": \"очиститель труб\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    }\r\n ]`;\r\n export const startProducts = JSON.parse(products);\r\n\r\n const groups = `[\r\n     {\"id\":1,\"name\":\"разное\",\"img\":\"other.png\"},\r\n     {\"id\":2,\"name\":\"кулинария\",\"img\":\"cookery.png\"},\r\n     {\"id\":3,\"name\":\"деликатесы\",\"img\":\"delicatessen.png\"},\r\n     {\"id\":4,\"name\":\"молочные продукты\",\"img\":\"milk.png\"},\r\n     {\"id\":5,\"name\":\"морские продукты\",\"img\":\"sea-foods.png\"},\r\n     {\"id\":6,\"name\":\"бакалея\",\"img\":\"cereal.png\"},\r\n     {\"id\":7,\"name\":\"выпечка\",\"img\":\"bakery.png\"},\r\n     {\"id\":8,\"name\":\"кондитерские изделия\",\"img\":\"sweets.png\"},\r\n     {\"id\":9,\"name\":\"консервированные продукты\",\"img\":\"canned-food.png\"},\r\n     {\"id\":10,\"name\":\"масла\",\"img\":\"oils.png\"},\r\n     {\"id\":11,\"name\":\"приправы\",\"img\":\"spices.png\"},\r\n     {\"id\":12,\"name\":\"напитки\",\"img\":\"drinks.png\"},\r\n     {\"id\":13,\"name\":\"чай и кофе\",\"img\":\"coffee-and-tea.png\"},\r\n     {\"id\":14,\"name\":\"алкогольные напитки\",\"img\":\"alcohol.png\"},\r\n     {\"id\":15,\"name\":\"табачные изделия\",\"img\":\"tobacco.png\"},\r\n     {\"id\":16,\"name\":\"сыры\",\"img\":\"cheese.png\"},\r\n     {\"id\":17,\"name\":\"домашнее хозяйство\",\"img\":\"household.png\"},\r\n     {\"id\":18,\"name\":\"аптека\",\"img\":\"pharmacy.png\"},\r\n     {\"id\":19,\"name\":\"замороженные продукты\",\"img\":\"frozen-food.png\"},\r\n     {\"id\":20,\"name\":\"домашние питомцы\",\"img\":\"pets.png\"},\r\n     {\"id\":21,\"name\":\"овощи и фрукты\",\"img\":\"vegetables&fruits.png\"},\r\n     {\"id\":22,\"name\":\"орехи и сухофрукты\",\"img\":\"nuts-and-dried-fruits.png\"}\r\n]`;\r\nexport const startGroups = JSON.parse(groups);","import {startProducts} from './data'\r\nimport {startGroups} from './data'\r\n\r\nconst getItems = (id) => {\r\n  const arr = startProducts.filter(el => el.groupId === id).map(el => {\r\n    if (el.groupId === id) {\r\n      return {id: `${el.id}`, name: el.name, groupId: el.groupId, groupName: el.groupName}\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst getGroups = () => {\r\n  const obj = {};\r\n  startGroups.forEach((el) => {\r\n    obj[`${el.name}`] = {id: `${el.name}`, id0: el.id, name: el.name, img: el.img, items: getItems(el.id)} \r\n  })\r\n  return obj;\r\n}\r\n\r\nconst initial = {\r\n  columns: getGroups(),                            \r\n  columnOrder: startGroups.map(el => el.name)      // [\"column-0\", \"column-1\"]\r\n};\r\n\r\nexport default function getInitialData() {\r\n  return initial;\r\n}","import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { reorderList } from \"./components/reorder\";\nimport './App.css';\nimport Column from './components/Column';\nimport axios from \"axios\";\nimport Progress from './components/Progress';\nimport { useSnackbar } from 'notistack';\nimport getInitialData from \"./components/get-initial-data\";\n\n\nfunction App() {\n  // const [state, setState] = useState({columns: {}, columnOrder: []});\n  const [state, setState] = useState(() => getInitialData());\n  const [products, setProducts] = useState(null);\n  const [groups, setGroups] = useState(null);\n  const [newProductId, setNewProductId] = useState(null);\n  const [newGroupId, setNewGroupId] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n      \n  const id = (new URLSearchParams(window.location.search)).get(\"code\");\n  const apiKey = id ? `?code=${id}` : '';\n\n  const instance = axios.create({\n    baseURL: \"https://helper-pepper.com/api/\",\n    withCredentials: false,\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n      }\n  });\n\n  useEffect(async () => {\n    if (!products && !groups) {\n      setIsPending(true);\n      \n      try {\n        const responseProducts = await instance.get(`products${apiKey}`);\n        \n        if (responseProducts.status === 200) {\n          setProducts(responseProducts.data.products);\n        }\n\n        const responseGroups = await instance.get(`groups${apiKey}`);\n\n        if (responseGroups.status === 200) {\n          setGroups(responseGroups.data.groups);\n        }\n\n      } catch (error) {\n        enqueueSnackbar(\"Can't Connect To Server!\", {variant: 'error'})\n      }\n      setIsPending(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (products && groups) {\n      const getItems = (id) => {\n        const arr = products.filter(el => el.groupId === id).map(el => {\n          if (el.groupId === id) {\n            return {id: `${el.id}`, name: el.name, groupId: el.groupId, groupName: el.groupName}\n          }\n        });\n        return arr;\n      }\n      \n      const getGroups = () => {\n        const obj = {};\n        groups.forEach((el) => {\n          obj[`${el.name}`] = {id: `${el.name}`, id0: el.id, name: el.name, img: el.img, items: getItems(el.id)} \n        })\n        return obj;\n      }\n      \n      const initial = {\n        columns: getGroups(),                            \n        columnOrder: groups.map(el => el.name)      \n      };\n      \n      setState(initial);\n    }\n  }, [products, groups]);\n\n  useEffect(async () => {\n    if (newProductId && newGroupId) {\n      try {\n        const response = await instance.put(`product/${newProductId}/group/${newGroupId}${apiKey}`);\n        if (response.status === 200) {\n          enqueueSnackbar('Update success!', {variant: 'success'})         \n          setNewProductId(null);\n          setNewGroupId(null);\n        }\n      } catch (error) {\n        enqueueSnackbar('Update error!', {variant: 'error'})\n      }\n    }\n  }, [newProductId, newGroupId]);\n  \n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === \"column\") {\n      const columnOrder = reorderList(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder\n      });\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const items = reorderList(\n        column.items,\n        result.source.index,\n        0                       \n      );\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            items\n          }\n        }\n      };\n      setState(newState);\n      return;\n    }\n\n    // moving between lists\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const item = sourceColumn.items[result.source.index];\n\n    // 1. remove item from source column\n    const newSourceColumn = {\n      ...sourceColumn,\n      items: [...sourceColumn.items]\n    };\n    newSourceColumn.items.splice(result.source.index, 1);\n\n    // 2. insert into destination column\n    const newDestinationColumn = {\n      ...destinationColumn,\n      items: [...destinationColumn.items]\n    };\n\n    // newDestinationColumn.items.splice(result.destination.index, 0, item);\n    newDestinationColumn.items.splice(0, 0, item);   \n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn\n      }\n    };\n\n    setState(newState);\n    setNewProductId(Number(item.id));\n    setNewGroupId(newDestinationColumn.id0);\n  }\n\n  if (isPending) {\n    return <Progress />\n  }\n\n  if (state.columnOrder.length === 0) {\n    return <h1 className=\"fake-page\">State is empty!</h1>\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"app\">\n        <div className=\"columns_wrap\">\n          <div>\n            <Droppable\n              droppableId=\"all-droppables1\"\n              type=\"column\"\n            >\n              {(provided) => {\n                return (\n                <div\n                  className=\"columns\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {state.columnOrder.map((columnId, index) => (<React.Fragment key={columnId}>\n                    {columnId === 'разное' && (<Column\n                        columnId={columnId}\n                        column={state.columns[columnId]}\n                        index={index}\n                      />)}</React.Fragment>\n                    ))}\n                  {provided.placeholder}\n                </div>\n              )}}\n            </Droppable>\n          </div>\n        <Droppable\n          droppableId=\"all-droppables\"\n          type=\"column\"\n        >\n          {(provided) => {\n            return (\n            <div\n              className=\"columns\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {state.columnOrder.map((columnId, index) => (<React.Fragment key={columnId}>\n                {columnId !== 'разное' && (<Column\n                  column={state.columns[columnId]}\n                  index={index}\n                />)}</React.Fragment>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}}\n        </Droppable>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\n\nconst sizeWindow0 = window.innerWidth;\nlet max = 3;\nif (sizeWindow0 < 900) {\n  max = 1;\n}\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={max} dense>\n    <React.StrictMode>\n      <BrowserRouter>\n        <Switch>\n          <Route path={`/`}>\n            <App />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </React.StrictMode>\n  </SnackbarProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}