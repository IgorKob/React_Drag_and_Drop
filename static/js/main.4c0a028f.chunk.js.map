{"version":3,"sources":["components/data.js","components/get-initial-data.js","components/reorder.js","components/Item.js","components/Row.js","components/ItemList.js","components/Column.js","App.js","reportWebVitals.js","index.js"],"names":["startProducts0","JSON","parse","arr","i","j","push","id","name","groupId","groupName","startProducts","startGroups","initial","columns","obj","forEach","el","id0","img","items","filter","map","getGroups","columnOrder","reorderList","list","startIndex","endIndex","result","Array","from","splice","removed","getStyle","draggableStyle","virtualStyle","isDragging","combined","height","left","width","grid","marginBottom","backgroundColor","borderRadius","color","boxShadow","Item","provided","item","style","ListItem","button","divider","draggableProps","dragHandleProps","ref","innerRef","className","ListItemText","primary","Row","React","memo","props","data","index","draggableId","areEqual","ItemListApp","column","open","setIsHover","listRef","useRef","useLayoutEffect","current","scrollTo","droppableId","mode","renderClone","snapshot","rubric","source","isDraggingOver","itemCount","isUsingPlaceholder","length","sizeKim","itemSize","outerRef","itemData","transition","background","top","opacity","Column","columnId","openStart","useState","setOpen","isHover","classes","makeStyles","theme","margin","title__wrap","border","title","textTransform","whiteSpace","overflow","textOverflow","icon","minWidth","small","spacing","ItemList_wrap","ItemList_wrap2","useStyles","handleClick","onClick","ListItemIcon","List","component","disablePadding","paddingTop","App","state","setState","setNewProductId","setNewGroupId","onDragEnd","destination","type","sourceColumn","destinationColumn","newSourceColumn","newDestinationColumn","newState","Number","onDragStart","window","navigator","vibrate","droppableProps","Fragment","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c0a028f.chunk.js","sourcesContent":["// const products = `[\r\n//     {\r\n//        \"id\": 1,\r\n//        \"name\": \"картофель\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 2,\r\n//        \"name\": \"помидоры\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 3,\r\n//        \"name\": \"клубника\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 4,\r\n//        \"name\": \"шоколад\",\r\n//        \"groupId\": 8,\r\n//        \"groupName\": \"кондитерские изделия\"\r\n//     },\r\n//     {\r\n//        \"id\": 5,\r\n//        \"name\": \"томаты\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 6,\r\n//        \"name\": \"яблоко\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 7,\r\n//        \"name\": \"пиво\",\r\n//        \"groupId\": 14,\r\n//        \"groupName\": \"алкогольные напитки\"\r\n//     },\r\n//     {\r\n//        \"id\": 8,\r\n//        \"name\": \"арахис\",\r\n//        \"groupId\": 22,\r\n//        \"groupName\": \"орехи и сухофрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 9,\r\n//        \"name\": \"туалетная бумага\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 10,\r\n//        \"name\": \"ягоды\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 11,\r\n//        \"name\": \"салат\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 12,\r\n//        \"name\": \"гранола\",\r\n//        \"groupId\": 6,\r\n//        \"groupName\": \"бакалея\"\r\n//     },\r\n//     {\r\n//        \"id\": 13,\r\n//        \"name\": \"папки\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 14,\r\n//        \"name\": \"ватные диски\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 15,\r\n//        \"name\": \"кофе\",\r\n//        \"groupId\": 13,\r\n//        \"groupName\": \"чай и кофе\"\r\n//     },\r\n//     {\r\n//        \"id\": 16,\r\n//        \"name\": \"бананы\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 17,\r\n//        \"name\": \"лаваш\",\r\n//        \"groupId\": 7,\r\n//        \"groupName\": \"выпечка\"\r\n//     },\r\n//     {\r\n//        \"id\": 18,\r\n//        \"name\": \"баклажаны\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 19,\r\n//        \"name\": \"шампунь\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 20,\r\n//        \"name\": \"вода минеральная\",\r\n//        \"groupId\": 12,\r\n//        \"groupName\": \"напитки\"\r\n//     },\r\n//     {\r\n//        \"id\": 21,\r\n//        \"name\": \"кукуруза\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 22,\r\n//        \"name\": \"овсянка\",\r\n//        \"groupId\": 6,\r\n//        \"groupName\": \"бакалея\"\r\n//     },\r\n//     {\r\n//        \"id\": 23,\r\n//        \"name\": \"тампоны\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 24,\r\n//        \"name\": \"растительное молоко\",\r\n//        \"groupId\": 4,\r\n//        \"groupName\": \"молочные продукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 25,\r\n//        \"name\": \"объединить список\",\r\n//        \"groupId\": 1,\r\n//        \"groupName\": \"разное\"\r\n//     },\r\n//     {\r\n//        \"id\": 26,\r\n//        \"name\": \"жвачку\",\r\n//        \"groupId\": 2,\r\n//        \"groupName\": \"кулинария\"\r\n//     },\r\n//     {\r\n//        \"id\": 27,\r\n//        \"name\": \"огурец\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 28,\r\n//        \"name\": \"перец\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 29,\r\n//        \"name\": \"груша\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 30,\r\n//        \"name\": \"итальянские травы\",\r\n//        \"groupId\": 11,\r\n//        \"groupName\": \"приправы\"\r\n//     },\r\n//     {\r\n//        \"id\": 31,\r\n//        \"name\": \"авокадо\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 32,\r\n//        \"name\": \"персики\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 33,\r\n//        \"name\": \"чай с травами\",\r\n//        \"groupId\": 13,\r\n//        \"groupName\": \"чай и кофе\"\r\n//     },\r\n//     {\r\n//        \"id\": 34,\r\n//        \"name\": \"клей\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 35,\r\n//        \"name\": \"стиральный порошок\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 36,\r\n//        \"name\": \"травяной чай\",\r\n//        \"groupId\": 13,\r\n//        \"groupName\": \"чай и кофе\"\r\n//     },\r\n//     {\r\n//        \"id\": 37,\r\n//        \"name\": \"средство для прочистки труб\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 38,\r\n//        \"name\": \"картошка\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 39,\r\n//        \"name\": \"петрушка\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 40,\r\n//        \"name\": \"соль\",\r\n//        \"groupId\": 11,\r\n//        \"groupName\": \"приправы\"\r\n//     },\r\n//     {\r\n//        \"id\": 41,\r\n//        \"name\": \"морковь\",\r\n//        \"groupId\": 21,\r\n//        \"groupName\": \"овощи и фрукты\"\r\n//     },\r\n//     {\r\n//        \"id\": 42,\r\n//        \"name\": \"гель для душа\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 43,\r\n//        \"name\": \"горшок для гибискуса\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     },\r\n//     {\r\n//        \"id\": 44,\r\n//        \"name\": \"очиститель труб\",\r\n//        \"groupId\": 17,\r\n//        \"groupName\": \"домашнее хозяйство\"\r\n//     }\r\n//  ]`;\r\n//  export const startProducts = JSON.parse(products);\r\n\r\nconst products = `[\r\n   {\r\n      \"id\": 1,\r\n      \"name\": \"картофель\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 2,\r\n      \"name\": \"помидоры\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 3,\r\n      \"name\": \"клубника\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 4,\r\n      \"name\": \"шоколад\",\r\n      \"groupId\": 8,\r\n      \"groupName\": \"кондитерские изделия\"\r\n   },\r\n   {\r\n      \"id\": 5,\r\n      \"name\": \"томаты\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 6,\r\n      \"name\": \"яблоко\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 7,\r\n      \"name\": \"пиво\",\r\n      \"groupId\": 14,\r\n      \"groupName\": \"алкогольные напитки\"\r\n   },\r\n   {\r\n      \"id\": 8,\r\n      \"name\": \"арахис\",\r\n      \"groupId\": 22,\r\n      \"groupName\": \"орехи и сухофрукты\"\r\n   },\r\n   {\r\n      \"id\": 9,\r\n      \"name\": \"туалетная бумага\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 10,\r\n      \"name\": \"ягоды\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 11,\r\n      \"name\": \"салат\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 12,\r\n      \"name\": \"гранола\",\r\n      \"groupId\": 6,\r\n      \"groupName\": \"бакалея\"\r\n   },\r\n   {\r\n      \"id\": 13,\r\n      \"name\": \"папки\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 14,\r\n      \"name\": \"ватные диски\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 15,\r\n      \"name\": \"кофе\",\r\n      \"groupId\": 13,\r\n      \"groupName\": \"чай и кофе\"\r\n   },\r\n   {\r\n      \"id\": 16,\r\n      \"name\": \"бананы\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 17,\r\n      \"name\": \"лаваш\",\r\n      \"groupId\": 7,\r\n      \"groupName\": \"выпечка\"\r\n   },\r\n   {\r\n      \"id\": 18,\r\n      \"name\": \"баклажаны\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 19,\r\n      \"name\": \"шампунь\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 20,\r\n      \"name\": \"вода минеральная\",\r\n      \"groupId\": 12,\r\n      \"groupName\": \"напитки\"\r\n   },\r\n   {\r\n      \"id\": 21,\r\n      \"name\": \"кукуруза\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 22,\r\n      \"name\": \"овсянка\",\r\n      \"groupId\": 6,\r\n      \"groupName\": \"бакалея\"\r\n   },\r\n   {\r\n      \"id\": 23,\r\n      \"name\": \"тампоны\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 24,\r\n      \"name\": \"растительное молоко\",\r\n      \"groupId\": 4,\r\n      \"groupName\": \"молочные продукты\"\r\n   },\r\n   {\r\n      \"id\": 25,\r\n      \"name\": \"объединить список\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"разное\"\r\n   },\r\n   {\r\n      \"id\": 26,\r\n      \"name\": \"жвачку\",\r\n      \"groupId\": 2,\r\n      \"groupName\": \"кулинария\"\r\n   },\r\n   {\r\n      \"id\": 27,\r\n      \"name\": \"огурец\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 28,\r\n      \"name\": \"перец\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 29,\r\n      \"name\": \"груша\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 30,\r\n      \"name\": \"итальянские травы\",\r\n      \"groupId\": 11,\r\n      \"groupName\": \"приправы\"\r\n   },\r\n   {\r\n      \"id\": 31,\r\n      \"name\": \"авокадо\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 32,\r\n      \"name\": \"персики\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 33,\r\n      \"name\": \"чай с травами\",\r\n      \"groupId\": 13,\r\n      \"groupName\": \"чай и кофе\"\r\n   },\r\n   {\r\n      \"id\": 34,\r\n      \"name\": \"клей\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 35,\r\n      \"name\": \"стиральный порошок\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 36,\r\n      \"name\": \"травяной чай\",\r\n      \"groupId\": 13,\r\n      \"groupName\": \"чай и кофе\"\r\n   },\r\n   {\r\n      \"id\": 37,\r\n      \"name\": \"средство для прочистки труб\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 38,\r\n      \"name\": \"картошка\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 39,\r\n      \"name\": \"петрушка\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 40,\r\n      \"name\": \"соль\",\r\n      \"groupId\": 11,\r\n      \"groupName\": \"приправы\"\r\n   },\r\n   {\r\n      \"id\": 41,\r\n      \"name\": \"морковь\",\r\n      \"groupId\": 21,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 42,\r\n      \"name\": \"гель для душа\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 43,\r\n      \"name\": \"горшок для гибискуса\",\r\n      \"groupId\": 17,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 44,\r\n      \"name\": \"очиститель труб\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 45,\r\n      \"name\": \"картофель\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 46,\r\n      \"name\": \"помидоры\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 47,\r\n      \"name\": \"клубника\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 48,\r\n      \"name\": \"шоколад\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"кондитерские изделия\"\r\n   },\r\n   {\r\n      \"id\": 49,\r\n      \"name\": \"томаты\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 50,\r\n      \"name\": \"яблоко\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 51,\r\n      \"name\": \"пиво\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"алкогольные напитки\"\r\n   },\r\n   {\r\n      \"id\": 52,\r\n      \"name\": \"арахис\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"орехи и сухофрукты\"\r\n   },\r\n   {\r\n      \"id\": 53,\r\n      \"name\": \"туалетная бумага\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   },\r\n   {\r\n      \"id\": 54,\r\n      \"name\": \"ягоды\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 55,\r\n      \"name\": \"салат\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"овощи и фрукты\"\r\n   },\r\n   {\r\n      \"id\": 56,\r\n      \"name\": \"гранола\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"бакалея\"\r\n   },\r\n   {\r\n      \"id\": 57,\r\n      \"name\": \"папки\",\r\n      \"groupId\": 1,\r\n      \"groupName\": \"домашнее хозяйство\"\r\n   }\r\n]`;\r\n// export const startProducts = JSON.parse(products);\r\n\r\n \r\n\r\nconst startProducts0 = JSON.parse(products);\r\nconst arr = [...startProducts0];\r\n\r\nfor (let i = 1; i <= 22 ; i++) {\r\n   for (let j = 0; j <= 1000; j++) {\r\n     arr.push({id: `${i}_${j}`, name: `name_${i}_${j}`, groupId: i, groupName: `groupName_${i}_${j}`})\r\n   }   \r\n}\r\nexport const startProducts = arr;\r\n\r\n\r\n\r\n\r\n const groups = `[\r\n     {\"id\":1,\"name\":\"разное\",\"img\":\"other.png\"},\r\n     {\"id\":2,\"name\":\"кулинария\",\"img\":\"cookery.png\"},\r\n     {\"id\":3,\"name\":\"деликатесы\",\"img\":\"delicatessen.png\"},\r\n     {\"id\":4,\"name\":\"молочные продукты\",\"img\":\"milk.png\"},\r\n     {\"id\":5,\"name\":\"морские продукты\",\"img\":\"sea-foods.png\"},\r\n     {\"id\":6,\"name\":\"бакалея\",\"img\":\"cereal.png\"},\r\n     {\"id\":7,\"name\":\"выпечка\",\"img\":\"bakery.png\"},\r\n     {\"id\":8,\"name\":\"кондитерские изделия\",\"img\":\"sweets.png\"},\r\n     {\"id\":9,\"name\":\"консервированные продукты\",\"img\":\"canned-food.png\"},\r\n     {\"id\":10,\"name\":\"масла\",\"img\":\"oils.png\"},\r\n     {\"id\":11,\"name\":\"приправы\",\"img\":\"spices.png\"},\r\n     {\"id\":12,\"name\":\"напитки\",\"img\":\"drinks.png\"},\r\n     {\"id\":13,\"name\":\"чай и кофе\",\"img\":\"coffee-and-tea.png\"},\r\n     {\"id\":14,\"name\":\"алкогольные напитки\",\"img\":\"alcohol.png\"},\r\n     {\"id\":15,\"name\":\"табачные изделия\",\"img\":\"tobacco.png\"},\r\n     {\"id\":16,\"name\":\"сыры\",\"img\":\"cheese.png\"},\r\n     {\"id\":17,\"name\":\"домашнее хозяйство\",\"img\":\"household.png\"},\r\n     {\"id\":18,\"name\":\"аптека\",\"img\":\"pharmacy.png\"},\r\n     {\"id\":19,\"name\":\"замороженные продукты\",\"img\":\"frozen-food.png\"},\r\n     {\"id\":20,\"name\":\"домашние питомцы\",\"img\":\"pets.png\"},\r\n     {\"id\":21,\"name\":\"овощи и фрукты\",\"img\":\"vegetables&fruits.png\"},\r\n     {\"id\":22,\"name\":\"орехи и сухофрукты\",\"img\":\"nuts-and-dried-fruits.png\"}\r\n]`;\r\nexport const startGroups = JSON.parse(groups);","import {startProducts} from './data'\r\nimport {startGroups} from './data'\r\n\r\nconst getItems = (id) => {\r\n  const arr = startProducts.filter(el => el.groupId === id).map(el => {\r\n    if (el.groupId === id) {\r\n      return {id: `${el.id}`, name: el.name, groupId: el.groupId, groupName: el.groupName}\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst getGroups = () => {\r\n  const obj = {};\r\n  startGroups.forEach((el) => {\r\n    obj[`${el.name}`] = {id: `${el.name}`, id0: el.id, name: el.name, img: el.img, items: getItems(el.id)} \r\n  })\r\n  return obj;\r\n}\r\n\r\nconst initial = {\r\n  columns: getGroups(),                            \r\n  columnOrder: startGroups.map(el => el.name)      // [\"column-0\", \"column-1\"]\r\n};\r\n\r\nexport default function getInitialData() {\r\n  return initial;\r\n}","export function reorderList(list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n  \r\n    return result;\r\n  }\r\n  ","import React from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst getStyle = ({ draggableStyle, virtualStyle, isDragging }) => {\r\n    const combined = {\r\n      ...virtualStyle,\r\n      ...draggableStyle\r\n    };  \r\n    const grid = 8;  \r\n\r\n    const result = {\r\n      ...combined,\r\n      // height: isDragging ? combined.height : combined.height - (grid*3),\r\n      height: isDragging ? combined.height : combined.height - (grid),\r\n      left: isDragging ? combined.left : combined.left + grid,\r\n      width: isDragging\r\n        ? draggableStyle.width\r\n        : `calc(${combined.width} - ${grid * 3}px)`,\r\n      // marginBottom: grid,\r\n      marginBottom: `${grid*3}px`,\r\n      // backgroundColor: '#aaa',\r\n      backgroundColor: 'lightgrey',\r\n      borderRadius: '15px',\r\n      color: 'rgba(0,0,0,.6)',\r\n      // border: '1px solid lightblue',\r\n      boxShadow: '2px 2px #aaa'\r\n    };\r\n    return result;\r\n  }\r\n\r\nconst Item = ({ provided, item, style, isDragging }) => {\r\n    return (\r\n        <ListItem button divider \r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          style={getStyle({\r\n            draggableStyle: provided.draggableProps.style,\r\n            virtualStyle: style,\r\n            isDragging\r\n          })}\r\n        className={`item ${isDragging ? \"is-dragging\" : \"\"}`}\r\n        >\r\n          <ListItemText primary={item.name} />\r\n        </ListItem>\r\n    );\r\n  }\r\nexport default Item;","import React from \"react\";\r\nimport { areEqual } from \"react-window\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\n\r\nconst Row = React.memo(function Row(props) {\r\n    const { data: items, index, style } = props;\r\n    const item = items[index];\r\n  \r\n    if (!item) {\r\n      return null;\r\n    }\r\n  \r\n    return (\r\n      <Draggable draggableId={item.id} index={index} key={item.id}>\r\n        {provided => <Item provided={provided} item={item} style={style} />}\r\n      </Draggable>\r\n    );\r\n  }, areEqual);\r\n  export default Row;","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\nimport Row from './Row';\r\n\r\n\r\n\r\nconst ItemListApp = React.memo(function ItemList({ column, index, open, setIsHover }) {\r\n    const listRef = useRef();\r\n    useLayoutEffect(() => {\r\n      const list = listRef.current;\r\n      if (list) {\r\n        list.scrollTo(0);\r\n      }\r\n    }, [index]);\r\n\r\n\r\n    // // 1\r\n    // provided\r\n    //   dragHandleProps:\r\n    //     aria-describedby: \"rbd-hidden-text-1-hidden-text-1\"\r\n    //     data-rbd-drag-handle-context-id: \"1\"\r\n    //     data-rbd-drag-handle-draggable-id: \"25\"\r\n    //     draggable: false\r\n    //     onDragStart: ƒ preventHtml5Dnd(event)\r\n    //     role: \"button\"\r\n    //     tabIndex: 0\r\n    //   draggableProps:\r\n    //     data-rbd-draggable-context-id: \"1\"\r\n    //     data-rbd-draggable-id: \"25\"\r\n    //     onTransitionEnd: null\r\n    //     style:\r\n    //       boxSizing: \"border-box\"\r\n    //       height: 52\r\n    //       left: 12\r\n    //       opacity: null\r\n    //       pointerEvents: \"none\"\r\n    //       position: \"fixed\"\r\n    //       top: 57\r\n    //       transform: \"translate(326px, 162px)\"\r\n    //       transition: \"opacity 0.2s cubic-bezier(0.2, 0, 0, 1)\"\r\n    //       width: 291.75\r\n    //       zIndex: 5000\r\n\r\n\r\n    // // 2\r\n    // snapshot\r\n    //   combineTargetFor: null\r\n    //   combineWith: null\r\n    //   draggingOver: \"кулинария\"\r\n    //   dropAnimation: null\r\n    //   isClone: true\r\n    //   isDragging: true\r\n    //   isDropAnimating: false\r\n    //   mode: \"FLUID\"\r\n\r\n\r\n// 3\r\n    // rubric\r\n    //   source:\r\n    //     droppableId: \"разное\"\r\n    //     index: 0\r\n    //   type: \"DEFAULT\"\r\n\r\n\r\n// //  44\r\n// provided\r\n//   droppableProps:\r\n//     data-rbd-droppable-context-id: \"1\"\r\n//     data-rbd-droppable-id: \"разное\"\r\n  // droppableProps:\r\n  //   data-rbd-droppable-context-id: \"1\"\r\n  //   data-rbd-droppable-id: \"деликатесы\"\r\n\r\n    // data-rbd-draggable-id='разное'\r\n\r\n\r\n    const getListStyle = (isDraggingOver) => {\r\n      // debugger\r\n      if (!open && isDraggingOver) {\r\n        setIsHover(false);\r\n      }\r\n      if (!open && !isDraggingOver) {\r\n        setIsHover(true);\r\n      }\r\n\r\n      return {\r\n      // background: isDraggingOver ? 'lightblue!important' : 'lightgrey!important',\r\n      // background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n      // background: isDraggingOver ? 'lightblue' : 'green',\r\n      // background: isDraggingOver ? 'rgb(189, 255, 217)' : 'lightblue',\r\n      transition: 'background .7s',\r\n      background: open ? isDraggingOver ? 'rgb(189, 255, 217)' : 'lightblue' : isDraggingOver ? 'rgb(189, 255, 217)' : 'transparent',\r\n      // height: isDraggingOver && '200px',\r\n      // top: isDraggingOver && '-50px',\r\n      // height: isDraggingOver && '50px',\r\n      // padding: '20px',\r\n      // display: 'none',\r\n      width: !open && '10%',\r\n      left: !open && '40%',\r\n      top: !open && '-45px',\r\n      borderRadius: '15px',\r\n      // height: !open && '50px',\r\n      // opacity: !open && '0',\r\n      opacity: !open && '0',\r\n      // paddingTop: !open && '30px',\r\n      // opacity: open && isDraggingOver ? '1' : '0',\r\n      // opacity: open ? isDraggingOver ? '1' : '1' : isDraggingOver ? '1' : '0',\r\n    }};\r\n\r\n    return (\r\n      <Droppable\r\n        droppableId={column.id}\r\n        mode=\"virtual\"\r\n        renderClone={(provided, snapshot, rubric) => {\r\n  // debugger\r\n          return (<Item\r\n            provided={provided}\r\n            isDragging={snapshot.isDragging}\r\n            item={column.items[rubric.source.index]}\r\n            // style={getListStyle(snapshot.isDraggingOver)}\r\n          />\r\n        )}}\r\n      >\r\n        {(provided, snapshot) => {\r\n          const itemCount = snapshot.isUsingPlaceholder\r\n            ? column.items.length + 1\r\n            : column.items.length;\r\n\r\n        // const sizeKim = open ? 500 : 40;\r\n        const sizeKim = open ? 333 : 40;\r\n  // debugger\r\n          return (\r\n            <FixedSizeList\r\n              // height={500}\r\n              height={sizeKim}\r\n              itemCount={itemCount}\r\n              // itemSize={60}\r\n              itemSize={50}\r\n              // width={300}\r\n              outerRef={provided.innerRef}\r\n              itemData={column.items}\r\n              className=\"task-list\"\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              // style={getListStyle(snapshot.isDragging)}\r\n              ref={listRef}\r\n            >\r\n              {Row}\r\n            </FixedSizeList>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    );\r\n  });\r\n  export default ItemListApp;","import React, { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n// import img from './images/p1.jpg'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListMaterialUI from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Avatar from '@material-ui/core/Avatar';                           // img\r\nimport ItemListApp from './ItemList';\r\n\r\nconst styleColumnWrap = () => {\r\n\r\n}\r\n\r\n\r\n\r\nconst Column = React.memo(function Column({ column, index, columnId = null }) {\r\n    const openStart = columnId === 'разное' ? true : false;\r\n    // const [open, setOpen] = useState(false);\r\n    const [open, setOpen] = useState(openStart);\r\n    const [isHover, setIsHover] = useState(false);\r\n  \r\n    const useStyles = makeStyles((theme) => ({\r\n      column: {\r\n        margin: '3px',\r\n        // padding: '1px',\r\n      },\r\n      title__wrap: {\r\n        border: '1px solid #ccc',\r\n        // padding: '11px',\r\n        // backgroundColor: styleHover && 'red!important',\r\n        // backgroundColor: isHover ? '' : 'rgb(189, 255, 217)!important',\r\n        // backgroundColor: isHover ? '' : '#fff!important',\r\n        backgroundColor: isHover ? '' : open ? '#fff!important' : 'rgb(189, 255, 217)!important',\r\n        \r\n        // backgroundColor: columnId === 'разное' && '#fff!important',\r\n        transition: 'background .7s',\r\n\r\n  \r\n        \r\n        // '&:hover': {backgroundColor: 'lightgreen'},\r\n        '&:hover': {\r\n          // backgroundColor: 'red!important',\r\n          // \"& $addIcon\": {\r\n          //   color: \"purple\"\r\n          // }\r\n       }\r\n      },\r\n      // title__wrap:hover: {\r\n      //   backgroundColor: 'lightgreen',\r\n      // },\r\n      title: {\r\n        textTransform: 'uppercase',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n      },\r\n      icon: {\r\n        minWidth: '33px',\r\n      },\r\n      small: {                     // img avatar\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n      },\r\n      ItemList_wrap: {\r\n        backgroundColor: 'lightblue',\r\n        transition: ' .7s',\r\n        // paddingTop: '3px',          // dont work only (+ItemList_wrap2)\r\n        // height: '40px',\r\n        // display: 'dlock!important',\r\n        // height: '0px',\r\n      },\r\n      ItemList_wrap2: {      \r\n\r\n        // padding: '3px',\r\n        // height: '30px',\r\n        // overflow: 'hidden',\r\n        // display: 'dlock!important',\r\n  \r\n      },\r\n    }));\r\n\r\n    // data-rbd-draggable-id='разное'\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleClick = () => {\r\n      setOpen(!open);\r\n    };\r\n  \r\n    // const handleMouseOver = isDraggingOver => event => {\r\n    //   debugger\r\n    //   if (isDraggingOver) {\r\n    //     setOpen(true);\r\n    //   }\r\n    // };\r\n    const handleMouseOver2 = isDraggingOver => {\r\n      // debugger\r\n      if (isDraggingOver) {\r\n        setOpen(false);\r\n      }\r\n    };\r\n\r\n    const getListStyle = (isDraggingOver) => {\r\n      // debugger\r\n      if (isDraggingOver) {\r\n\r\n      }\r\n\r\n      return {\r\n      // background: isDraggingOver ? 'lightblue!important' : 'lightgrey!important',\r\n      // background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n      // background: isDraggingOver ? 'lightblue' : '#fff',\r\n      background: isDraggingOver ? 'rgb(160, 160, 255)' : '#fff',\r\n      // height: isDraggingOver && '200px',\r\n      // top: isDraggingOver && '-50px',\r\n      // height: isDraggingOver && '50px',\r\n      // padding: '8px',\r\n      // width: 250,\r\n      // display: 'none',\r\n    }};\r\n\r\n  // provided\r\n  //   dragHandleProps:\r\n  //     aria-describedby: \"rbd-hidden-text-1-hidden-text-1\"\r\n  //     data-rbd-drag-handle-context-id: \"1\"\r\n  //     data-rbd-drag-handle-draggable-id: \"разное\"\r\n\r\n  //   draggableProps:\r\n  //     data-rbd-draggable-context-id: \"1\"\r\n  //     data-rbd-draggable-id: \"разное\"\r\n\r\n  // const getListStyleAll = (el) => {\r\n  //   // debugger\r\n  //   if (el['data-rbd-draggable-id'] === 'разное') {\r\n  //     return {\r\n  //       backgroundColor: 'red!important',\r\n  //       color: 'red!important',\r\n  //       // height: '200px'\r\n  //     }\r\n  //   }\r\n  //   return {};\r\n  // }\r\n\r\n  // const getListStyleAll = (el) => {\r\n  //   debugger\r\n  //   if (el === 'разное') {\r\n  //     setOpen(true);\r\n  //   }\r\n  //   return {};\r\n  // }\r\n\r\n    return (\r\n      <Draggable draggableId={column.id} index={index}>\r\n        {(provided, snapshot) => {\r\n// debugger\r\n          return (\r\n          <div\r\n            className={classes.column}\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n            // style={getListStyle(snapshot.isDraggingOver)}\r\n            // style={getListStyle(snapshot.draggingOver)}\r\n\r\n            // style={{ backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey' }}\r\n            // style={{\r\n            //   backgroundColor: provided.isDragging ? 'green' : 'lightblue',\r\n            // }}\r\n            // style={getListStyleAll(provided.draggableProps)}\r\n            // style={getListStyleAll(provided.draggableProps['data-rbd-draggable-id'])}\r\n            // style={{\r\n            //   // color: provided.draggableProps['data-rbd-draggable-id'] === 'разное' ? 'green!important' : 'lightblue!important',\r\n            // }}\r\n          >\r\n              <ListItem button onClick={handleClick} {...provided.dragHandleProps} className={classes.title__wrap}\r\n                // onMouseOver={handleMouseOver(snapshot.isDraggingOver)}\r\n                // onMouseOver={handleMouseOver(snapshot.isDragging)}\r\n                // onMouseMove={handleMouseOver(snapshot.isDragging)}\r\n                style={getListStyle(snapshot.isDragging)}\r\n              >\r\n                <ListItemIcon className={classes.icon}>\r\n                  <AddShoppingCartIcon />\r\n                  {/* <Avatar variant=\"rounded\" alt={column.name} src={column.img} className={classes.small} /> */}\r\n                  {/* <Avatar variant=\"rounded\" alt={column.name} src={img} className={classes.small} /> */}\r\n                </ListItemIcon>\r\n                <ListItemText primary={column.name} className={classes.title} />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              {/* <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.ItemList_wrap}> */}\r\n              <div className={classes.ItemList_wrap} >\r\n                <ListMaterialUI component=\"div\" disablePadding className={classes.ItemList_wrap2} style={{height: !open && '0px', paddingTop: open && '3px'}}>\r\n                    <ItemListApp column={column} index={index} \r\n                      open={open}\r\n                      setIsHover={setIsHover}\r\n                    />\r\n                </ListMaterialUI>\r\n              </div>\r\n              {/* </Collapse> */}\r\n          </div>\r\n          )}}\r\n      </Draggable>\r\n    );\r\n  });\r\n  export default Column;","import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport getInitialData from \"./components/get-initial-data\";\nimport { reorderList } from \"./components/reorder\";\nimport './App.css';\nimport Column from './components/Column';\nimport axios from \"axios\";\n\nfunction App() {\n  const [state, setState] = useState(() => getInitialData());\n  const [newProductId, setNewProductId] = useState(null);\n  const [newGroupId, setNewGroupId] = useState(null);\n  // debugger\n  // const myArray = Object.values(state.columns).map(el => el.items).flat();\n  // const myArray2 = myArray.map(el => ({id: Number(el.id), name: el.name, groupId: el.groupId, groupName: el.groupName}));\n  // const myArray3 = myArray2.sort((a, b) => a.id - b.id);\n  // console.log(myArray3);\n\n  // useEffect(async () => {\n  //   debugger\n  //   if (newProductId && newGroupId) {\n  //     const api = 'https://helper-pepper.com/api/';\n  //     const id = 'asd';\n  //     try {\n  //       const response = await axios.put(`${api}product/${newProductId}/group/${newGroupId}/${id}`, \n  //         {\"body\":data}, \n  //         {\n  //           headers: {\n  //            'Content-Type': 'application/json'\n  //         },\n  //       });\n  //       console.log(response);\n  //     } catch (error) {\n  //       // console.log(error.response.data.error);\n  //       console.error(error);\n  //     }\n  //   }\n  // }, [newProductId, newGroupId])\n  \n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === \"column\") {\n      const columnOrder = reorderList(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder\n      });\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const items = reorderList(\n        column.items,\n        result.source.index,\n        // result.destination.index\n        0                            // kim order 0\n      );\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            items\n          }\n        }\n      };\n      setState(newState);\n      return;\n    }\n\n    // moving between lists\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const item = sourceColumn.items[result.source.index];\n\n    // kim\n    item.groupId = destinationColumn.id0;     // kim rename\n    item.groupName = destinationColumn.id;    // kim rename\n\n    // 1. remove item from source column\n    const newSourceColumn = {\n      ...sourceColumn,\n      items: [...sourceColumn.items]\n    };\n    newSourceColumn.items.splice(result.source.index, 1);\n\n    // 2. insert into destination column\n    const newDestinationColumn = {\n      ...destinationColumn,\n      items: [...destinationColumn.items]\n    };\n    // in line modification of items\n    // newDestinationColumn.items.splice(result.destination.index, 0, item);\n    newDestinationColumn.items.splice(0, 0, item);   // kim order 0\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn\n      }\n    };\n// debugger\n    setState(newState);\n    setNewProductId(Number(item.id));\n    setNewGroupId(newDestinationColumn.id0);\n  }\n\n  // kim2 vibro\n  const onDragStart = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(100);\n    }\n  };\n\n  // provided\n  //   droppableProps:\n  //     data-rbd-droppable-context-id: \"1\"\n  return (\n    <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart} >\n      <div className=\"app\">\n        {/* <Droppable\n          droppableId=\"all-droppables\"\n          // direction=\"horizontal\"\n          // direction=\"vertical\"\n          type=\"column\"\n        >\n          {(provided, snapshot) => {\n            // debugger\n            return (\n            <div\n              className=\"columns\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {state.columnOrder.map((columnId, index) => (\n                <Column\n                  key={columnId}\n                  column={state.columns[columnId]}\n                  index={index}\n                />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}}\n        </Droppable> */}\n        <div className=\"columns_wrap\">\n          <div>\n            <Droppable\n              droppableId=\"all-droppables1\"\n              // direction=\"horizontal\"\n              // direction=\"vertical\"\n              type=\"column\"\n            >\n              {(provided, snapshot) => {\n                // debugger\n                return (\n                <div\n                  className=\"columns\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {state.columnOrder.map((columnId, index) => (<React.Fragment key={columnId}>\n                    {columnId === 'разное' && (<Column\n                        // key={columnId}\n                        columnId={columnId}\n                        column={state.columns[columnId]}\n                        index={index}\n                      />)}</React.Fragment>\n                    ))}\n                  {provided.placeholder}\n                </div>\n              )}}\n            </Droppable>\n          </div>\n        <Droppable\n          droppableId=\"all-droppables\"\n          // direction=\"horizontal\"\n          // direction=\"vertical\"\n          type=\"column\"\n        >\n          {(provided, snapshot) => {\n            // debugger\n            return (\n            <div\n              className=\"columns\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {state.columnOrder.map((columnId, index) => (<React.Fragment key={columnId}>\n                {columnId !== 'разное' && (<Column\n                  // key={columnId}\n                  column={state.columns[columnId]}\n                  index={index}\n                />)}</React.Fragment>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}}\n        </Droppable>\n        </div>\n      </div>\n    </DragDropContext>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}