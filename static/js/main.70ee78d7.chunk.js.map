{"version":3,"sources":["components/data.js","components/get-initial-data.js","components/reorder.js","components/Item.js","components/Row.js","components/ItemList.js","components/Column.js","App.js","reportWebVitals.js","index.js"],"names":["startProducts","JSON","parse","startGroups","initial","columns","obj","forEach","el","id","name","id0","img","items","filter","groupId","map","groupName","getGroups","columnOrder","reorderList","list","startIndex","endIndex","result","Array","from","splice","removed","getStyle","draggableStyle","virtualStyle","isDragging","combined","height","left","width","grid","marginBottom","backgroundColor","Item","provided","item","style","ListItem","button","divider","draggableProps","dragHandleProps","ref","innerRef","className","ListItemText","primary","Row","React","memo","props","data","index","draggableId","areEqual","ItemListApp","column","listRef","useRef","useLayoutEffect","current","scrollTo","droppableId","mode","renderClone","snapshot","rubric","source","itemCount","isUsingPlaceholder","length","itemSize","outerRef","itemData","useStyles","makeStyles","theme","margin","title__wrap","border","title","textTransform","whiteSpace","overflow","textOverflow","icon","minWidth","small","spacing","ItemList_wrap","paddingTop","ItemList_wrap2","padding","Column","classes","useState","open","setOpen","handleClick","onClick","ListItemIcon","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","App","state","setState","onDragEnd","destination","type","sourceColumn","destinationColumn","newSourceColumn","newDestinationColumn","newState","onDragStart","window","navigator","vibrate","droppableProps","columnId","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA0QcA,EAAgBC,KAAKC,MA1QrB,46TAoSDC,EAAcF,KAAKC,MAxBnB,umFCxPPE,EAAU,CACdC,QATgB,WAChB,IAAMC,EAAM,GAIZ,OAHAH,EAAYI,SAAQ,SAACC,GAXN,IAACC,EAYdH,EAAI,GAAD,OAAIE,EAAGE,OAAU,CAACD,GAAG,GAAD,OAAKD,EAAGE,MAAQC,IAAKH,EAAGC,GAAIC,KAAMF,EAAGE,KAAME,IAAKJ,EAAGI,IAAKC,OAZjEJ,EAYiFD,EAAGC,GAXxFT,EAAcc,QAAO,SAAAN,GAAE,OAAIA,EAAGO,UAAYN,KAAIO,KAAI,SAAAR,GAC5D,GAAIA,EAAGO,UAAYN,EACjB,MAAO,CAACA,GAAG,GAAD,OAAKD,EAAGC,IAAMC,KAAMF,EAAGE,KAAMK,QAASP,EAAGO,QAASE,UAAWT,EAAGS,mBAWvEX,EAIEY,GACTC,YAAahB,EAAYa,KAAI,SAAAR,GAAE,OAAIA,EAAGE,SCtBjC,SAASU,EAAYC,EAAMC,EAAYC,GAC1C,IAAMC,EAASC,MAAMC,KAAKL,GAD0B,EAElCG,EAAOG,OAAOL,EAAY,GAArCM,EAF6C,oBAKpD,OAFAJ,EAAOG,OAAOJ,EAAU,EAAGK,GAEpBJ,E,4HCDLK,EAAW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACxCC,EAAQ,2BACTF,GACAD,GAcL,OAVY,2BACPG,GADO,IAEVC,OAAQF,EAAaC,EAASC,OAASD,EAASC,OAJrC,EAKXC,KAAMH,EAAaC,EAASE,KAAOF,EAASE,KALjC,EAMXC,MAAOJ,EACHF,EAAeM,MADF,eAELH,EAASG,MAFJ,cAEeC,GAFf,OAGjBC,aATW,EAUXC,gBAAiB,UAsBRC,EAjBF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOX,EAAiB,EAAjBA,WACnC,OACI,cAACY,EAAA,EAAD,qCAAUC,QAAM,EAACC,SAAO,GAClBL,EAASM,gBACTN,EAASO,iBAFf,IAGEC,IAAKR,EAASS,SACdP,MAAOd,EAAS,CACdC,eAAgBW,EAASM,eAAeJ,MACxCZ,aAAcY,EACdX,eAEJmB,UAAS,eAAUnB,EAAa,cAAgB,IAThD,SAWE,cAACoB,EAAA,EAAD,CAAcC,QAASX,EAAKhC,WClBrB4C,EAdLC,IAAMC,MAAK,SAAaC,GAAQ,IAC1B5C,EAAwB4C,EAA9BC,KAAaC,EAAiBF,EAAjBE,MAAOhB,EAAUc,EAAVd,MACtBD,EAAO7B,EAAM8C,GAEnB,OAAKjB,EAKH,cAAC,IAAD,CAAWkB,YAAalB,EAAKjC,GAAIkD,MAAOA,EAAxC,SACG,SAAAlB,GAAQ,OAAI,cAAC,EAAD,CAAMA,SAAUA,EAAUC,KAAMA,EAAMC,MAAOA,MADRD,EAAKjC,IAJlD,OAQRoD,KCgCYC,EA5CGP,IAAMC,MAAK,YAAsC,IAAlBO,EAAiB,EAAjBA,OAAQJ,EAAS,EAATA,MACjDK,EAAUC,mBAQhB,OAPAC,2BAAgB,WACd,IAAM7C,EAAO2C,EAAQG,QACjB9C,GACFA,EAAK+C,SAAS,KAEf,CAACT,IAGF,cAAC,IAAD,CACEU,YAAaN,EAAOtD,GACpB6D,KAAK,UACLC,YAAa,SAAC9B,EAAU+B,EAAUC,GAArB,OACX,cAAC,EAAD,CACEhC,SAAUA,EACVT,WAAYwC,EAASxC,WACrBU,KAAMqB,EAAOlD,MAAM4D,EAAOC,OAAOf,UAPvC,SAWG,SAAClB,EAAU+B,GACV,IAAMG,EAAYH,EAASI,mBACvBb,EAAOlD,MAAMgE,OAAS,EACtBd,EAAOlD,MAAMgE,OAEjB,OACE,cAAC,IAAD,CACE3C,OAAQ,IACRyC,UAAWA,EACXG,SAAU,GAEVC,SAAUtC,EAASS,SACnB8B,SAAUjB,EAAOlD,MACjBsC,UAAU,YACVF,IAAKe,EARP,SAUGV,UC5BT2B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCpB,OAAQ,CACNqB,OAAQ,OAEVC,YAAa,CACXC,OAAQ,kBAEVC,MAAO,CACLC,cAAe,YACfC,WAAY,SACZC,SAAU,SACVC,aAAc,YAEhBC,KAAM,CACJC,SAAU,QAEZC,MAAO,CACL1D,MAAO+C,EAAMY,QAAQ,GACrB7D,OAAQiD,EAAMY,QAAQ,IAExBC,cAAe,CACbzD,gBAAiB,OACjB0D,WAAY,OAEdC,eAAgB,CACdC,QAAS,WAuCEC,EAnCF7C,IAAMC,MAAK,YAAoC,IAAlBO,EAAiB,EAAjBA,OAAQJ,EAAS,EAATA,MAC1C0C,EAAUpB,IADyC,EAEjCqB,oBAAS,GAFwB,mBAElDC,EAFkD,KAE5CC,EAF4C,KAInDC,EAAc,WAClBD,GAASD,IAGX,OACE,cAAC,IAAD,CAAW3C,YAAaG,EAAOtD,GAAIkD,MAAOA,EAA1C,SACG,SAAAlB,GAAQ,OACP,8CACEU,UAAWkD,EAAQtC,QACftB,EAASM,gBAFf,IAGEE,IAAKR,EAASS,SAHhB,UAKI,eAACN,EAAA,EAAD,yBAAUC,QAAM,EAAC6D,QAASD,GAAiBhE,EAASO,iBAApD,IAAqEG,UAAWkD,EAAQhB,YAAxF,UACE,cAACsB,EAAA,EAAD,CAAcxD,UAAWkD,EAAQT,KAAjC,SACE,cAAC,IAAD,MAIF,cAACxC,EAAA,EAAD,CAAcC,QAASU,EAAOrD,KAAMyC,UAAWkD,EAAQd,QACtDgB,EAAO,cAAC,IAAD,IAAiB,cAAC,IAAD,QAE3B,cAACK,EAAA,EAAD,CAAUC,GAAIN,EAAMO,QAAQ,OAAOC,eAAa,EAAC5D,UAAWkD,EAAQL,cAApE,SACE,cAACgB,EAAA,EAAD,CAAgBC,UAAU,MAAMC,gBAAc,EAAC/D,UAAWkD,EAAQH,eAAlE,SACI,cAAC,EAAD,CAAanC,OAAQA,EAAQJ,MAAOA,kBC4DzCwD,MA5Hf,WAAgB,IAAD,EACab,oBAAS,kBNkB5BlG,KMnBM,mBACNgH,EADM,KACCC,EADD,KA6Fb,OACE,cAAC,IAAD,CAAiBC,UAtFnB,SAAmB9F,GAAS,IAAD,EACzB,GAAKA,EAAO+F,YAIZ,GAAoB,WAAhB/F,EAAOgG,KAaX,GAAIhG,EAAOkD,OAAOL,cAAgB7C,EAAO+F,YAAYlD,YAArD,CAwBA,IAAMoD,EAAeL,EAAM/G,QAAQmB,EAAOkD,OAAOL,aAC3CqD,EAAoBN,EAAM/G,QAAQmB,EAAO+F,YAAYlD,aACrD3B,EAAO+E,EAAa5G,MAAMW,EAAOkD,OAAOf,OAG9CjB,EAAK3B,QAAU2G,EAAkB/G,IACjC+B,EAAKzB,UAAYyG,EAAkBjH,GAGnC,IAAMkH,EAAe,2BAChBF,GADgB,IAEnB5G,MAAM,YAAK4G,EAAa5G,SAE1B8G,EAAgB9G,MAAMc,OAAOH,EAAOkD,OAAOf,MAAO,GAGlD,IAAMiE,EAAoB,2BACrBF,GADqB,IAExB7G,MAAM,YAAK6G,EAAkB7G,SAI/B+G,EAAqB/G,MAAMc,OAAO,EAAG,EAAGe,GAExC,IAAMmF,EAAQ,2BACTT,GADS,IAEZ/G,QAAQ,2BACH+G,EAAM/G,SADJ,uBAEJsH,EAAgBlH,GAAKkH,GAFjB,cAGJC,EAAqBnH,GAAKmH,GAHtB,MAOTP,EAASQ,OAzDT,CACE,IAAM9D,EAASqD,EAAM/G,QAAQmB,EAAOkD,OAAOL,aACrCxD,EAAQO,EACZ2C,EAAOlD,MACPW,EAAOkD,OAAOf,MAEd,GAGIkE,EAAQ,2BACTT,GADS,IAEZ/G,QAAQ,2BACH+G,EAAM/G,SADJ,kBAEJ0D,EAAOtD,GAFH,2BAGAsD,GAHA,IAIHlD,cAINwG,EAASQ,OAhCX,CACE,IAAM1G,EAAcC,EAClBgG,EAAMjG,YACNK,EAAOkD,OAAOf,MACdnC,EAAO+F,YAAY5D,OAErB0D,EAAS,2BACJD,GADG,IAENjG,mBAyEmC2G,YAPrB,WACdC,OAAOC,UAAUC,SACnBF,OAAOC,UAAUC,QAAQ,MAK3B,SACE,qBAAK9E,UAAU,MAAf,SACE,cAAC,IAAD,CACEkB,YAAY,iBAIZmD,KAAK,SALP,SAOG,SAAA/E,GAAQ,OACP,8CACEU,UAAU,WACNV,EAASyF,gBAFf,IAGEjF,IAAKR,EAASS,SAHhB,UAKGkE,EAAMjG,YAAYH,KAAI,SAACmH,EAAUxE,GAAX,OACrB,cAAC,EAAD,CAEEI,OAAQqD,EAAM/G,QAAQ8H,GACtBxE,MAAOA,GAFFwE,MAKR1F,EAAS2F,wBC/GTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70ee78d7.chunk.js","sourcesContent":["const products = `[\r\n    {\r\n       \"id\": 1,\r\n       \"name\": \"картофель\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 2,\r\n       \"name\": \"помидоры\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 3,\r\n       \"name\": \"клубника\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 4,\r\n       \"name\": \"шоколад\",\r\n       \"groupId\": 8,\r\n       \"groupName\": \"кондитерские изделия\"\r\n    },\r\n    {\r\n       \"id\": 5,\r\n       \"name\": \"томаты\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 6,\r\n       \"name\": \"яблоко\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 7,\r\n       \"name\": \"пиво\",\r\n       \"groupId\": 14,\r\n       \"groupName\": \"алкогольные напитки\"\r\n    },\r\n    {\r\n       \"id\": 8,\r\n       \"name\": \"арахис\",\r\n       \"groupId\": 22,\r\n       \"groupName\": \"орехи и сухофрукты\"\r\n    },\r\n    {\r\n       \"id\": 9,\r\n       \"name\": \"туалетная бумага\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 10,\r\n       \"name\": \"ягоды\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 11,\r\n       \"name\": \"салат\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 12,\r\n       \"name\": \"гранола\",\r\n       \"groupId\": 6,\r\n       \"groupName\": \"бакалея\"\r\n    },\r\n    {\r\n       \"id\": 13,\r\n       \"name\": \"папки\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 14,\r\n       \"name\": \"ватные диски\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 15,\r\n       \"name\": \"кофе\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 16,\r\n       \"name\": \"бананы\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 17,\r\n       \"name\": \"лаваш\",\r\n       \"groupId\": 7,\r\n       \"groupName\": \"выпечка\"\r\n    },\r\n    {\r\n       \"id\": 18,\r\n       \"name\": \"баклажаны\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 19,\r\n       \"name\": \"шампунь\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 20,\r\n       \"name\": \"вода минеральная\",\r\n       \"groupId\": 12,\r\n       \"groupName\": \"напитки\"\r\n    },\r\n    {\r\n       \"id\": 21,\r\n       \"name\": \"кукуруза\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 22,\r\n       \"name\": \"овсянка\",\r\n       \"groupId\": 6,\r\n       \"groupName\": \"бакалея\"\r\n    },\r\n    {\r\n       \"id\": 23,\r\n       \"name\": \"тампоны\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 24,\r\n       \"name\": \"растительное молоко\",\r\n       \"groupId\": 4,\r\n       \"groupName\": \"молочные продукты\"\r\n    },\r\n    {\r\n       \"id\": 25,\r\n       \"name\": \"объединить список\",\r\n       \"groupId\": 1,\r\n       \"groupName\": \"разное\"\r\n    },\r\n    {\r\n       \"id\": 26,\r\n       \"name\": \"жвачку\",\r\n       \"groupId\": 2,\r\n       \"groupName\": \"кулинария\"\r\n    },\r\n    {\r\n       \"id\": 27,\r\n       \"name\": \"огурец\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 28,\r\n       \"name\": \"перец\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 29,\r\n       \"name\": \"груша\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 30,\r\n       \"name\": \"итальянские травы\",\r\n       \"groupId\": 11,\r\n       \"groupName\": \"приправы\"\r\n    },\r\n    {\r\n       \"id\": 31,\r\n       \"name\": \"авокадо\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 32,\r\n       \"name\": \"персики\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 33,\r\n       \"name\": \"чай с травами\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 34,\r\n       \"name\": \"клей\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 35,\r\n       \"name\": \"стиральный порошок\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 36,\r\n       \"name\": \"травяной чай\",\r\n       \"groupId\": 13,\r\n       \"groupName\": \"чай и кофе\"\r\n    },\r\n    {\r\n       \"id\": 37,\r\n       \"name\": \"средство для прочистки труб\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 38,\r\n       \"name\": \"картошка\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 39,\r\n       \"name\": \"петрушка\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 40,\r\n       \"name\": \"соль\",\r\n       \"groupId\": 11,\r\n       \"groupName\": \"приправы\"\r\n    },\r\n    {\r\n       \"id\": 41,\r\n       \"name\": \"морковь\",\r\n       \"groupId\": 21,\r\n       \"groupName\": \"овощи и фрукты\"\r\n    },\r\n    {\r\n       \"id\": 42,\r\n       \"name\": \"гель для душа\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 43,\r\n       \"name\": \"горшок для гибискуса\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    },\r\n    {\r\n       \"id\": 44,\r\n       \"name\": \"очиститель труб\",\r\n       \"groupId\": 17,\r\n       \"groupName\": \"домашнее хозяйство\"\r\n    }\r\n ]`;\r\n export const startProducts = JSON.parse(products);\r\n\r\n const groups = `[\r\n     {\"id\":1,\"name\":\"разное\",\"img\":\"other.png\"},\r\n     {\"id\":2,\"name\":\"кулинария\",\"img\":\"cookery.png\"},\r\n     {\"id\":3,\"name\":\"деликатесы\",\"img\":\"delicatessen.png\"},\r\n     {\"id\":4,\"name\":\"молочные продукты\",\"img\":\"milk.png\"},\r\n     {\"id\":5,\"name\":\"морские продукты\",\"img\":\"sea-foods.png\"},\r\n     {\"id\":6,\"name\":\"бакалея\",\"img\":\"cereal.png\"},\r\n     {\"id\":7,\"name\":\"выпечка\",\"img\":\"bakery.png\"},\r\n     {\"id\":8,\"name\":\"кондитерские изделия\",\"img\":\"sweets.png\"},\r\n     {\"id\":9,\"name\":\"консервированные продукты\",\"img\":\"canned-food.png\"},\r\n     {\"id\":10,\"name\":\"масла\",\"img\":\"oils.png\"},\r\n     {\"id\":11,\"name\":\"приправы\",\"img\":\"spices.png\"},\r\n     {\"id\":12,\"name\":\"напитки\",\"img\":\"drinks.png\"},\r\n     {\"id\":13,\"name\":\"чай и кофе\",\"img\":\"coffee-and-tea.png\"},\r\n     {\"id\":14,\"name\":\"алкогольные напитки\",\"img\":\"alcohol.png\"},\r\n     {\"id\":15,\"name\":\"табачные изделия\",\"img\":\"tobacco.png\"},\r\n     {\"id\":16,\"name\":\"сыры\",\"img\":\"cheese.png\"},\r\n     {\"id\":17,\"name\":\"домашнее хозяйство\",\"img\":\"household.png\"},\r\n     {\"id\":18,\"name\":\"аптека\",\"img\":\"pharmacy.png\"},\r\n     {\"id\":19,\"name\":\"замороженные продукты\",\"img\":\"frozen-food.png\"},\r\n     {\"id\":20,\"name\":\"домашние питомцы\",\"img\":\"pets.png\"},\r\n     {\"id\":21,\"name\":\"овощи и фрукты\",\"img\":\"vegetables&fruits.png\"},\r\n     {\"id\":22,\"name\":\"орехи и сухофрукты\",\"img\":\"nuts-and-dried-fruits.png\"}\r\n]`;\r\nexport const startGroups = JSON.parse(groups);","import {startProducts} from './data'\r\nimport {startGroups} from './data'\r\n\r\nconst getItems = (id) => {\r\n  const arr = startProducts.filter(el => el.groupId === id).map(el => {\r\n    if (el.groupId === id) {\r\n      return {id: `${el.id}`, name: el.name, groupId: el.groupId, groupName: el.groupName}\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n\r\nconst getGroups = () => {\r\n  const obj = {};\r\n  startGroups.forEach((el) => {\r\n    obj[`${el.name}`] = {id: `${el.name}`, id0: el.id, name: el.name, img: el.img, items: getItems(el.id)} \r\n  })\r\n  return obj;\r\n}\r\n\r\nconst initial = {\r\n  columns: getGroups(),                            \r\n  columnOrder: startGroups.map(el => el.name)      // [\"column-0\", \"column-1\"]\r\n};\r\n\r\nexport default function getInitialData() {\r\n  return initial;\r\n}","export function reorderList(list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n  \r\n    return result;\r\n  }\r\n  ","import React from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst getStyle = ({ draggableStyle, virtualStyle, isDragging }) => {\r\n    const combined = {\r\n      ...virtualStyle,\r\n      ...draggableStyle\r\n    };  \r\n    const grid = 8;  \r\n\r\n    const result = {\r\n      ...combined,\r\n      height: isDragging ? combined.height : combined.height - grid,\r\n      left: isDragging ? combined.left : combined.left + grid,\r\n      width: isDragging\r\n        ? draggableStyle.width\r\n        : `calc(${combined.width} - ${grid * 2}px)`,\r\n      marginBottom: grid,\r\n      backgroundColor: '#aaa',\r\n    };\r\n    return result;\r\n  }\r\n\r\nconst Item = ({ provided, item, style, isDragging }) => {\r\n    return (\r\n        <ListItem button divider \r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          style={getStyle({\r\n            draggableStyle: provided.draggableProps.style,\r\n            virtualStyle: style,\r\n            isDragging\r\n          })}\r\n        className={`item ${isDragging ? \"is-dragging\" : \"\"}`}\r\n        >\r\n          <ListItemText primary={item.name} />\r\n        </ListItem>\r\n    );\r\n  }\r\nexport default Item;","import React from \"react\";\r\nimport { areEqual } from \"react-window\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\n\r\nconst Row = React.memo(function Row(props) {\r\n    const { data: items, index, style } = props;\r\n    const item = items[index];\r\n  \r\n    if (!item) {\r\n      return null;\r\n    }\r\n  \r\n    return (\r\n      <Draggable draggableId={item.id} index={index} key={item.id}>\r\n        {provided => <Item provided={provided} item={item} style={style} />}\r\n      </Draggable>\r\n    );\r\n  }, areEqual);\r\n  export default Row;","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport { FixedSizeList } from \"react-window\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Item from './Item';\r\nimport Row from './Row';\r\n\r\nconst ItemListApp = React.memo(function ItemList({ column, index }) {\r\n    const listRef = useRef();\r\n    useLayoutEffect(() => {\r\n      const list = listRef.current;\r\n      if (list) {\r\n        list.scrollTo(0);\r\n      }\r\n    }, [index]);\r\n  \r\n    return (\r\n      <Droppable\r\n        droppableId={column.id}\r\n        mode=\"virtual\"\r\n        renderClone={(provided, snapshot, rubric) => (\r\n          <Item\r\n            provided={provided}\r\n            isDragging={snapshot.isDragging}\r\n            item={column.items[rubric.source.index]}\r\n          />\r\n        )}\r\n      >\r\n        {(provided, snapshot) => {\r\n          const itemCount = snapshot.isUsingPlaceholder\r\n            ? column.items.length + 1\r\n            : column.items.length;\r\n  \r\n          return (\r\n            <FixedSizeList\r\n              height={500}\r\n              itemCount={itemCount}\r\n              itemSize={60}\r\n              // width={300}\r\n              outerRef={provided.innerRef}\r\n              itemData={column.items}\r\n              className=\"task-list\"\r\n              ref={listRef}\r\n            >\r\n              {Row}\r\n            </FixedSizeList>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    );\r\n  });\r\n  export default ItemListApp;","import React, { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n// import img from './images/p1.jpg'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListMaterialUI from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Avatar from '@material-ui/core/Avatar';                           // img\r\nimport ItemListApp from './ItemList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    column: {\r\n      margin: '1px',\r\n    },\r\n    title__wrap: {\r\n      border: '1px solid #ccc',\r\n    },\r\n    title: {\r\n      textTransform: 'uppercase',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n    },\r\n    icon: {\r\n      minWidth: '33px',\r\n    },\r\n    small: {                     // img avatar\r\n      width: theme.spacing(3),\r\n      height: theme.spacing(3),\r\n    },\r\n    ItemList_wrap: {\r\n      backgroundColor: '#ccc',\r\n      paddingTop: '3px',          // dont work only (+ItemList_wrap2)\r\n    },\r\n    ItemList_wrap2: {      \r\n      padding: '3px',\r\n    },\r\n  }));\r\n\r\nconst Column = React.memo(function Column({ column, index }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(true);\r\n  \r\n    const handleClick = () => {\r\n      setOpen(!open);\r\n    };\r\n  \r\n    return (\r\n      <Draggable draggableId={column.id} index={index}>\r\n        {provided => (\r\n          <div\r\n            className={classes.column}\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n              <ListItem button onClick={handleClick} {...provided.dragHandleProps} className={classes.title__wrap}>\r\n                <ListItemIcon className={classes.icon}>\r\n                  <AddShoppingCartIcon />\r\n                  {/* <Avatar variant=\"rounded\" alt={column.name} src={column.img} className={classes.small} /> */}\r\n                  {/* <Avatar variant=\"rounded\" alt={column.name} src={img} className={classes.small} /> */}\r\n                </ListItemIcon>\r\n                <ListItemText primary={column.name} className={classes.title} />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n              </ListItem>\r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit className={classes.ItemList_wrap}>\r\n                <ListMaterialUI component=\"div\" disablePadding className={classes.ItemList_wrap2}>\r\n                    <ItemListApp column={column} index={index} />\r\n                </ListMaterialUI>\r\n              </Collapse>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  });\r\n  export default Column;","import React, { useState } from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport getInitialData from \"./components/get-initial-data\";\nimport { reorderList } from \"./components/reorder\";\nimport './App.css';\nimport Column from './components/Column';\n\nfunction App() {\n  const [state, setState] = useState(() => getInitialData());\n  // debugger\n  // const myArray = Object.values(state.columns).map(el => el.items).flat();\n  // const myArray2 = myArray.map(el => ({id: Number(el.id), name: el.name, groupId: el.groupId, groupName: el.groupName}));\n  // const myArray3 = myArray2.sort((a, b) => a.id - b.id);\n  // console.log(myArray3);\n\n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.type === \"column\") {\n      const columnOrder = reorderList(\n        state.columnOrder,\n        result.source.index,\n        result.destination.index\n      );\n      setState({\n        ...state,\n        columnOrder\n      });\n      return;\n    }\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      const column = state.columns[result.source.droppableId];\n      const items = reorderList(\n        column.items,\n        result.source.index,\n        // result.destination.index\n        0                            // kim order 0\n      );\n\n      const newState = {\n        ...state,\n        columns: {\n          ...state.columns,\n          [column.id]: {\n            ...column,\n            items\n          }\n        }\n      };\n      setState(newState);\n      return;\n    }\n\n    // moving between lists\n    const sourceColumn = state.columns[result.source.droppableId];\n    const destinationColumn = state.columns[result.destination.droppableId];\n    const item = sourceColumn.items[result.source.index];\n\n    // kim\n    item.groupId = destinationColumn.id0;     // kim rename\n    item.groupName = destinationColumn.id;    // kim rename\n\n    // 1. remove item from source column\n    const newSourceColumn = {\n      ...sourceColumn,\n      items: [...sourceColumn.items]\n    };\n    newSourceColumn.items.splice(result.source.index, 1);\n\n    // 2. insert into destination column\n    const newDestinationColumn = {\n      ...destinationColumn,\n      items: [...destinationColumn.items]\n    };\n    // in line modification of items\n    // newDestinationColumn.items.splice(result.destination.index, 0, item);\n    newDestinationColumn.items.splice(0, 0, item);   // kim order 0\n\n    const newState = {\n      ...state,\n      columns: {\n        ...state.columns,\n        [newSourceColumn.id]: newSourceColumn,\n        [newDestinationColumn.id]: newDestinationColumn\n      }\n    };\n\n    setState(newState);\n  }\n\n  // kim2 vibro\n  const onDragStart = () => {\n    if (window.navigator.vibrate) {\n      window.navigator.vibrate(100);\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart} >\n      <div className=\"app\">\n        <Droppable\n          droppableId=\"all-droppables\"\n          // direction=\"horizontal\"\n          // direction=\"vertical\"\n\n          type=\"column\"\n        >\n          {provided => (\n            <div\n              className=\"columns\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {state.columnOrder.map((columnId, index) => (\n                <Column\n                  key={columnId}\n                  column={state.columns[columnId]}\n                  index={index}\n                />\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </div>\n    </DragDropContext>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}